{"version":3,"sources":["utils/Api.js","utils/constant.js","images/headerlogo.svg","components/AuthInfo.js","components/Header.js","contexts/CurrentUserContext.js","components/Card.js","components/Main.js","components/Footer.js","components/ImagePopup.js","components/Form.js","components/PopupWithForm.js","components/EditAvatarPopup.js","components/EditProfilePopup.js","components/AddPlacePopup.js","components/ConfirmPopup.js","components/ProtectedRoute.js","components/InfoTooltip.js","errors/badRequestError.js","errors/notAuthorizedError.js","utils/auth.js","components/AuthorizeForm.js","components/Login.js","components/Register.js","images/resolve.svg","images/reject.svg","images/loading.svg","components/App.js","reportWebVitals.js","index.js"],"names":["api","options","this","_url","baseUrl","_headers","headers","path","parameters","fetch","then","res","ok","json","Promise","reject","status","_sendRequest","newUserInfo","method","body","JSON","stringify","name","about","newCard","title","link","id","isLiked","avatar","url","authorization","AuthInfo","email","signOut","className","href","onClick","Header","loggedIn","pathname","useLocation","linkText","linkPath","src","headerLogo","alt","to","CurrentUserContext","React","createContext","Card","card","onCardClick","onCardLike","onCardDelete","currentUser","useContext","isOwn","owner","_id","cardDeleteButtonClassName","likes","some","i","cardLikeButtonClassName","type","length","Main","onEditAvatar","onEditProfile","onAddPlace","cards","map","Footer","ImagePopup","isOpen","onClose","Form","formName","formId","onSubmit","children","isLoading","submitButtonText","isPopup","loginText","loginLink","noConfirm","disabled","PopupWithForm","EditAvatarPopup","onUpdateAvatar","inputRef","useRef","evt","preventDefault","current","value","htmlFor","ref","required","placeholder","EditProfilePopup","props","onUpdateUser","useState","setName","description","setDescription","useEffect","pattern","minLength","maxLength","autoComplete","onChange","target","AddPlacePopup","setLink","ConfirmPopup","onConfirmDelete","ProtectedRoute","Component","component","InfoTooltip","message","iconPath","text","BadRequestError","rest","Error","NotAuthorizedError","BASE_URL","getContent","token","err","data","AuthorizeForm","autoCompleteEmail","autoCompletePassword","setEmail","password","setPassword","emailError","setEmailError","passwordError","setPasswordError","emailValid","setEmailValid","passwordValid","setPasswordValid","emailRef","passwordRef","handleChange","validationMessage","validity","valid","Login","onLogin","Register","onRegister","App","isEditProfilePopupOpen","setEditProfilePopupOpen","isAddPlacePopupOpen","setAddPlacePopupOpen","isEditAvatarPopupOpen","setEditAvatarPopupOpen","isConfirmPopupOpen","setConfirmPopupOpen","setCards","isImageOpen","selectedCard","setSelectedCard","setCurrentUser","cardToDelete","setCardToDelete","setLoading","setLoggedIn","isAuthInfoOpened","isInfoTooltipOpen","setInfoTooltipOpen","loading","setMessage","location","history","useHistory","escape","require","closeAllPopups","jwt","localStorage","getItem","auth","push","catch","console","log","getUserInfo","currentUserInfoData","getInitialCards","cardData","Provider","locaction","removeItem","exact","changeLikeCardStatus","newCards","c","setItem","resolvePath","rejectPath","error","userData","updateUserInfo","newUser","finally","newAvatar","setUserAvatar","postNewCard","deleteCard","filter","item","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","basename","document","getElementById"],"mappings":"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","file":"static/js/main.20763d6b.chunk.js","sourcesContent":["import {apiOptions} from './constant.js'\r\n\r\n\r\n\r\n// class Api {\r\n//     constructor(options) {\r\n//       this._baseUrl = options.baseUrl;\r\n//       this._headers = options.headers;\r\n//     }\r\n\r\n//     // проверяем ответ сервера\r\n//     _serverAnswer(res){\r\n//       if (res.ok) {\r\n//         return res.json();\r\n//       }\r\n//       return Promise.reject(`Ошибка: ${res.status}`);\r\n//     }\r\n    \r\n//     // подгружаем с сервера данные карточек\r\n//     getInitialCards() {\r\n//       return fetch(`${this._baseUrl}/cards`, {\r\n//         headers: this._headers,\r\n//       })\r\n//       .then(this._serverAnswer)\r\n//     }\r\n\r\n//     // подгружаем информацию о пользователе с сервера\r\n//     getUserInfo() {\r\n//       return fetch(`${this._baseUrl}/users/me`, {\r\n//         headers: this._headers,\r\n//       })\r\n//       .then(this._serverAnswer)\r\n//     }\r\n\r\n//     // загружаем на сервер информацию о пользователе, отредактированную\r\n//     updateUserInfo(newUserInfo) {\r\n//       return fetch(`${this._baseUrl}/users/me`, {\r\n//         method: 'PATCH',\r\n//         headers: this._headers,\r\n//         body: JSON.stringify({\r\n//           name: newUserInfo.name,\r\n//           about: newUserInfo.about,\r\n//         }),\r\n//       })\r\n//       .then(this._serverAnswer)\r\n//     }\r\n  \r\n//     //обновление аватара\r\n//     setUserAvatar(avatar) {\r\n//       return fetch(`${this._baseUrl}/users/me/avatar`, {\r\n//         method: 'PATCH',\r\n//         body: JSON.stringify({ avatar: avatar.avatar }),\r\n//         headers: this._headers,\r\n//       })\r\n//       .then(this._serverAnswer)\r\n//     }\r\n  \r\n//     // добавление новой карты\r\n//     postNewCard(data) {\r\n//       return fetch(`${this._baseUrl}/cards`, {\r\n//         headers: this._headers,\r\n//         method: \"POST\",\r\n//         body: JSON.stringify({\r\n//           name: data.name,\r\n//           link: data.link,\r\n//         }),\r\n//       })\r\n//       .then(this._serverAnswer)\r\n//     }\r\n    \r\n//     // удаление карточки \r\n//     deleteCard(cardId) {\r\n//       return fetch(`${this._baseUrl}/cards/${cardId}`, {\r\n//         headers: this._headers,\r\n//         method: \"DELETE\",\r\n//       })\r\n//       .then(this._serverAnswer)\r\n//     }\r\n\r\n//     //постановка лайка\r\n//     changeLikeCardStatus(cardId, isLiked) {\r\n//       return fetch(`${this._baseUrl}/cards/likes/${cardId}`, {\r\n//         method: `${isLiked ? 'PUT' : 'DELETE'}`,\r\n//         headers: this._headers,\r\n//       })\r\n//       .then(this._serverAnswer)\r\n//     }\r\n\r\n//     // снятие лайка\r\n//     deleteLike(cardId) {\r\n//       return fetch(`${this._baseUrl}/cards/likes/${cardId}`, {\r\n//         method: \"DELETE\",\r\n//         headers: this._headers,\r\n//       })\r\n//       .then(this._serverAnswer)\r\n//     }\r\n\r\n// }\r\n\r\n  // export const api = new Api(options);\r\n\r\n  class Api {\r\n    constructor(options) {\r\n      this._url = options.baseUrl;\r\n      this._headers = options.headers;\r\n    }\r\n  \r\n    //Отправить запрос\r\n    _sendRequest(path, parameters) {\r\n      return fetch(`${this._url}${path}`, parameters).then((res) => {\r\n        if (res.ok) {\r\n          return res.json();\r\n        }\r\n        return Promise.reject(res.status);\r\n      });\r\n    }\r\n  \r\n    //Получить данные пользователя\r\n    getUserInfo() {\r\n      return this._sendRequest(`users/me`, {\r\n        headers: this._headers,\r\n      });\r\n    }\r\n  \r\n    //Получить карточки\r\n    getInitialCards() {\r\n      return this._sendRequest(`cards`, { headers: this._headers });\r\n    }\r\n  \r\n    //Обновить информацию о пользователе\r\n    updateUserInfo(newUserInfo) {\r\n      return this._sendRequest(`users/me`, {\r\n        method: 'PATCH',\r\n        headers: this._headers,\r\n        body: JSON.stringify({\r\n          name: newUserInfo.name,\r\n          about: newUserInfo.about,\r\n        }),\r\n      });\r\n    }\r\n  \r\n    //Добавить новую карточку\r\n    postNewCard(newCard) {\r\n      return this._sendRequest(`cards`, {\r\n        method: 'POST',\r\n        body: JSON.stringify({\r\n          name: newCard.title,\r\n          link: newCard.link,\r\n        }),\r\n        headers: this._headers,\r\n      });\r\n    }\r\n  \r\n    changeLikeCardStatus(id, isLiked) {\r\n      return this._sendRequest(`cards/likes/${id}`, {\r\n        method: `${isLiked ? 'PUT' : 'DELETE'}`,\r\n        headers: this._headers,\r\n      });\r\n    }\r\n  \r\n    //Удалить фото\r\n    deleteCard(id) {\r\n      return this._sendRequest(`cards/${id}`, {\r\n        method: 'DELETE',\r\n        headers: this._headers,\r\n      });\r\n    }\r\n  \r\n    //Обновить аватар\r\n    setUserAvatar(avatar) {\r\n      return this._sendRequest(`users/me/avatar`, {\r\n        method: 'PATCH',\r\n        body: JSON.stringify({ avatar: avatar.url }),\r\n        headers: this._headers,\r\n      });\r\n    }\r\n  }\r\n  \r\n  export const api = new Api(apiOptions);","\r\nexport const apiOptions = {\r\n  baseUrl: \"https://mesto.nomoreparties.co/v1/cohort-16\",\r\n  headers: {\r\n      authorization: \"3b2fde55-52e7-4322-8de5-f90b53e04551\",\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n};\r\n\r\n","export default __webpack_public_path__ + \"static/media/headerlogo.c2821b38.svg\";","import React from 'react';\r\n\r\nfunction AuthInfo({ email, signOut }) {\r\n  return (\r\n    <div className='auth-info'>\r\n      <span>{email}</span>\r\n      <a href='/sign-in' className='header__link' onClick={signOut}>Выйти</a>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AuthInfo;","import React from 'react';\r\nimport headerLogo from '../images/headerlogo.svg';\r\n\r\nimport { Link, useLocation } from 'react-router-dom';\r\nimport AuthInfo from './AuthInfo';\r\n\r\nfunction Header\r\n  ({\r\n    loggedIn, email, signOut\r\n  }) \r\n \r\n  {\r\n\r\n  const { pathname } = useLocation();\r\n\r\n  const linkText = `${pathname === '/sign-in' ? 'Регистрация' : 'Войти'}`;\r\n  const linkPath = `${pathname === '/sign-in' ? '/sign-up' : '/sign-in'}`;\r\n\r\n  return (\r\n    <header className=\"header section\">\r\n     <img className=\"header__logo-image\" src={headerLogo} alt=\"логотип сайта\"/>\r\n     {loggedIn\r\n        ? (<>\r\n          <AuthInfo email={email} signOut={signOut} />\r\n        </>)\r\n        : (<Link to={linkPath} className=\"link header__link\">{linkText}</Link>)\r\n      }\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\n\r\nexport const CurrentUserContext = React.createContext();","import React from 'react';\r\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\r\n\r\nfunction Card({card, onCardClick, onCardLike, onCardDelete}) {\r\n\r\n\r\nfunction handleClick() {\r\n    onCardClick(card);\r\n}\r\n   const currentUser = React.useContext(CurrentUserContext);\r\n\r\n    // Определяем, являемся ли мы владельцем текущей карточки\r\n    const isOwn = card.owner._id === currentUser._id;\r\n\r\n    // Создаём переменную, которую после зададим в `className` для кнопки удаления\r\n    const cardDeleteButtonClassName = (\r\n    `elements__delete ${isOwn ? 'elements__delete_visible' : 'elements__delete'}`\r\n    ); \r\n    const isLiked = card.likes.some((i) => i._id === currentUser._id);\r\n\r\n    const cardLikeButtonClassName = `elements__text-like ${\r\n      isLiked && 'elements__text-like_active'\r\n    }`;\r\n\r\n      function handleLikeClick() {\r\n        onCardLike(card);\r\n      }\r\n    \r\n      function handleDeleteClick() {\r\n        onCardDelete(card);\r\n    }\r\n\r\n    return (\r\n        <li className=\"elements__item\">\r\n            <img className=\"elements__item-img\" src={card.link}\r\n                alt={card.name}\r\n                onClick={handleClick}/>\r\n            <button type=\"button\" \r\n            className={cardDeleteButtonClassName}\r\n            onClick={handleDeleteClick} >\r\n            </button>\r\n            <div className=\"elements__text\">\r\n            <h3 className=\"elements__text-title\">{card.name}</h3>\r\n            <div className=\"elements__text_count\">\r\n            <button type=\"button\"  \r\n            className={cardLikeButtonClassName}\r\n            onClick={handleLikeClick} >\r\n          </button>\r\n            <div className=\"elements__text-likecounter\">{card.likes.length}</div>\r\n            </div>\r\n            </div>\r\n        </li>\r\n        \r\n    )\r\n\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\nimport Card from './Card';\r\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\r\n\r\nfunction Main({ onEditAvatar,onEditProfile,onAddPlace,cards,onCardClick, onCardDelete, onCardLike}){\r\n  const currentUser = React.useContext(CurrentUserContext);\r\n\r\n    return (\r\n        <div className=\"content section\">\r\n        <section className=\"profile section\">\r\n          <div className=\"profile__section\">\r\n            <div className=\"profile__avatar\">\r\n              <img className=\"profile__avatarimage\"\r\n                    alt='Аватар профиля'\r\n                    src={currentUser.avatar}\r\n                    />\r\n              <div className=\"profile__cover\">\r\n                <button type=\"button\" className=\"profile__avatarbutton\" onClick={onEditAvatar}></button>\r\n              </div>\r\n            </div>\r\n            <div className=\"profile__intro\">\r\n              <div className=\"intro\">\r\n              <h1 className=\"intro__title\">{currentUser.name}</h1>\r\n                <p className=\"intro__subtitle\">{currentUser.about}</p>\r\n              </div>\r\n              <button type=\"button\" className=\"profile__edit-button\" onClick={onEditProfile}></button>\r\n            </div>\r\n          </div>\r\n          <button type=\"button\" className=\"profile__button\" onClick={onAddPlace}></button>\r\n        </section>\r\n        <ul className=\"elements__list\">\r\n         {cards.map((card) => (\r\n        <Card\r\n          key={card._id}\r\n          card={card}\r\n          onCardClick={onCardClick}\r\n          onCardLike={onCardLike}\r\n          onCardDelete={onCardDelete}\r\n        />\r\n      ))}\r\n       </ul>\r\n      </div>\r\n    )\r\n}\r\nexport default Main;\r\n\r\n\r\n","import React from 'react';\r\n\r\nfunction Footer(){\r\n    return (\r\n    <footer className=\"footer section\">\r\n      <p className=\"footer__copyright\">© 2020 Mesto Russia</p>\r\n    </footer>\r\n    )\r\n}\r\n\r\nexport default Footer;","\r\nimport React from 'react';\r\n\r\nfunction ImagePopup({isOpen, onClose, link, name}) {\r\n  return (\r\n    <div className={`popup ${isOpen && 'popup_opened'}`}>\r\n      <div className=\"popup__background popup__background_photo\"></div>\r\n        <div className=\"popup__photo-container\">\r\n          <button type=\"reset\" className=\"popup__button\" onClick={onClose}></button>\r\n            <img className=\"popup__image\" src={link} alt={name}/>\r\n            <h2 className=\"popup__title popup__title_photo\">{name}</h2>\r\n        </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ImagePopup;\r\n\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction Form\r\n({\r\n    formName,\r\n    formId,\r\n    onSubmit,\r\n    title,\r\n    children,\r\n    isLoading,\r\n    submitButtonText,\r\n    isPopup,\r\n    path,\r\n    loginText,\r\n    loginLink,\r\n    noConfirm,\r\n    disabled,\r\n    onClose\r\n})\r\n    {\r\n        return(\r\n            <form \r\n            name={formName} \r\n            id={formId}\r\n            onSubmit={onSubmit}\r\n            className={`${isPopup && 'popup__form'} popup__form_type_${formName}`}>\r\n                \r\n                <h2 className={`${!isPopup && 'authorize__form-title'} popup__title`}>{title}</h2>\r\n                {children}\r\n\r\n                {!noConfirm\r\n          && (<button type=\"submit\" className={`${!isPopup && 'authorize__form-button'} popup__submit`}\r\n                        disabled={disabled}>\r\n                        {isLoading ? `Сохранение...` : submitButtonText}\r\n                </button>)}\r\n\r\n                {isPopup && (<button type=\"reset\" className=\"popup__button\" onClick={onClose}/>)}\r\n\r\n                {!isPopup && (<span className=\"authorize__form-quest\">{loginText}<Link to={path} className=\"authorize__form-quest authorize__form-link\">{loginLink}</Link></span>)}\r\n\r\n            </form>\r\n        )\r\n\r\n}\r\n\r\nexport default Form;","import React from 'react';\r\nimport Form  from './Form';\r\n\r\nfunction PopupWithForm\r\n  ({ \r\n    isOpen,\r\n    formId,\r\n    onSubmit,\r\n    onClose,\r\n    formName,\r\n    title,\r\n    children,\r\n    submitButtonText,\r\n    disabled,\r\n    isLoading,\r\n    noConfirm\r\n  })\r\n  {\r\n    return(\r\n         <section className={`popup ${isOpen && 'popup_opened'}`}>\r\n          <div className=\"popup__background\"></div>\r\n\r\n          <Form\r\n            id={formId}\r\n            isPopup={true}\r\n            name={formName}\r\n            onSubmit={onSubmit}\r\n            onClose={onClose}\r\n            isLoading={isLoading}\r\n            title={title}\r\n            children={children}\r\n            disabled={disabled}\r\n            submitButtonText={submitButtonText}\r\n            noConfirm={noConfirm}\r\n          ></Form>\r\n\r\n      </section>\r\n    )\r\n\r\n}\r\n\r\nexport default PopupWithForm;","import React, {useRef} from 'react';\r\nimport PopupWithForm from './PopupWithForm';\r\n\r\nfunction EditAvatarPopup({isOpen, onClose, onUpdateAvatar, isLoading }) {\r\n\r\n  const inputRef = useRef('');\r\n\r\n  function handleSubmit(evt) {\r\n    evt.preventDefault();\r\n    onUpdateAvatar({ avatar: inputRef.current.value });\r\n  }\r\n\r\n  return (\r\n    <PopupWithForm\r\n      name='popup'\r\n      id = 'popup-editavatar-form'\r\n      title='Обновить аватар'\r\n      submitButtonText='Сохранить'\r\n      isOpen={isOpen}\r\n      onClose={onClose}\r\n      onSubmit={handleSubmit}\r\n      isLoading={isLoading}\r\n    >\r\n     <label htmlFor='avatar' className=\"popup__input-label\">\r\n          <input \r\n            ref={inputRef}\r\n            type='url'\r\n            name=\"avatar\" \r\n            className=\"popup__input popup__input_avatar\" \r\n            required \r\n            placeholder=\"Ссылка на аватар\"\r\n          />\r\n          <span className='popup__input-error' id=\"avatar-error\"></span>\r\n        </label>\r\n    </PopupWithForm>\r\n  );\r\n}\r\n\r\nexport default EditAvatarPopup;\r\n","import React, { useState } from 'react';\r\nimport PopupWithForm from './PopupWithForm';\r\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\r\n\r\nfunction EditProfilePopup(props) {\r\n  const {isOpen, onClose, onUpdateUser, isLoading } = props\r\n  const currentUser = React.useContext(CurrentUserContext);\r\n\r\n  const [name, setName] = useState('');\r\n  const [description, setDescription] = useState('');\r\n\r\n  React.useEffect(() => {\r\n    setName(currentUser.name);\r\n    setDescription(currentUser.about);\r\n  }, [currentUser]);\r\n\r\n  function handleChangeName(evt) {\r\n    if(evt.target.name === 'name')\r\n      setName(evt.target.value)\r\n  }\r\n  function handleChangeDescription(evt) {\r\n    if(evt.target.name === 'about')\r\n      setDescription(evt.target.value);\r\n  }\r\n\r\n  function handleSubmit(evt) {\r\n    evt.preventDefault();\r\n    onUpdateUser({\r\n      name: name,\r\n      about: description,\r\n    });\r\n  }\r\n\r\n    return (\r\n      <PopupWithForm\r\n        name='popup'\r\n        id = 'popup-edit-form'\r\n        title='Редактировать профиль'\r\n        submitButtonText='Сохранить'\r\n        isOpen={isOpen}\r\n        onClose={onClose}\r\n        onSubmit={handleSubmit}\r\n        isLoading={isLoading}  \r\n      >\r\n        <label htmlFor='name' className=\"popup__input-label\">\r\n        <input  \r\n          name=\"name\"\r\n          value={name || ''}\r\n          className=\"popup__input popup__input_name\" \r\n          type=\"text\" \r\n          required \r\n          pattern='[А-Яа-яA-Za-z -]{1,}'\r\n          placeholder=\"Введите имя\" \r\n          minLength =\"2\" \r\n          maxLength =\"40\" \r\n          autoComplete=\"off\"\r\n          onChange={handleChangeName}\r\n        />\r\n        <span className='popup__input-error' id=\"name-error\"></span>\r\n        </label>\r\n        <label htmlFor='about' className=\"popup__input-label\">\r\n        <input \r\n          type='text'\r\n          name=\"about\" \r\n          className=\"popup__input popup__input_job\" \r\n          value={description || ''}\r\n          required \r\n          placeholder=\"Чем вы занимаетесь?\" \r\n          minLength =\"2\" \r\n          maxLength =\"200\" \r\n          autoComplete=\"off\"\r\n          onChange={handleChangeDescription}\r\n        />\r\n        <span className='popup__input-error' id=\"about-error\"></span>\r\n        </label>\r\n        </PopupWithForm>\r\n    );\r\n  }\r\nexport default EditProfilePopup;","import React, { useState }  from 'react';\r\nimport PopupWithForm from './PopupWithForm';\r\n\r\n\r\n\r\nfunction AddPlacePopup({isOpen,onClose, onAddPlace, isLoading }) {\r\n\r\n  const [name, setName] = useState('');\r\n  const [link, setLink] = useState('');\r\n  \r\n  React.useEffect(() => {\r\n    setName('');\r\n    setLink('');\r\n  }, [isOpen]);\r\n\r\n  function handleChangeCardName(evt) {\r\n    if(evt.target.name === 'name')\r\n      setName(evt.target.value)\r\n      // : setLink(evt.target.value);\r\n  }\r\n  function handleChangeCardLink(evt) {\r\n    if(evt.target.name === 'link')\r\n      // ? setName(evt.target.value)\r\n      setLink(evt.target.value);\r\n  }\r\n\r\n  function handleSubmit(evt) {\r\n    evt.preventDefault();\r\n    onAddPlace({\r\n      name,\r\n      link,\r\n    });\r\n  }\r\n\r\n  return (\r\n    <PopupWithForm\r\n      formName='popup'\r\n      formId = 'popup-addCard'\r\n      title='Новое место'\r\n      submitButtonText='Сохранить'\r\n      isOpen={isOpen}\r\n      onClose={onClose}\r\n      onSubmit={handleSubmit}\r\n      isLoading={isLoading}\r\n    >\r\n      <label htmlFor='name' className=\"popup__input-label\">\r\n            <input \r\n            id='name'\r\n            name='name'\r\n            value={name || ''}\r\n            placeholder='Название'\r\n            minLength='1'\r\n            maxLength='30'\r\n            required\r\n            onChange={handleChangeCardName}\r\n            className=\"popup__input popup__input_name\"\r\n            type=\"text\" \r\n            autoComplete=\"off\"\r\n             />\r\n            <span className='popup__input-error' \r\n            \r\n          id='name-error'></span>\r\n        </label>\r\n        <label htmlFor='link' className=\"popup__input-label\">   \r\n          <input \r\n          type='url'\r\n          id='link'\r\n          name='link'\r\n          value={link || ''}\r\n          placeholder='Ссылка на картинку'\r\n          required\r\n          onChange={handleChangeCardLink}\r\n          className=\"popup__input popup__input_link\" \r\n          autoComplete=\"off\" \r\n          minLength =\"2\" \r\n          maxLength =\"200\"/>\r\n          <span className='popup__input-error' id=\"link-error\"></span>\r\n        </label>\r\n    </PopupWithForm>\r\n  );\r\n}\r\n\r\nexport default AddPlacePopup;\r\n","import React from 'react';\r\nimport PopupWithForm from './PopupWithForm';\r\n\r\nfunction ConfirmPopup({isOpen, onClose, onConfirmDelete, isLoading}) {\r\n  \r\n  function handleSubmit(evt) {\r\n    evt.preventDefault();\r\n    onConfirmDelete();\r\n  }\r\n\r\n    return (\r\n      <PopupWithForm\r\n        name='popup'\r\n        id = 'popup-deleteCards'\r\n        title='Вы уверенны?'\r\n        submitButtonText='Да'\r\n        isOpen={isOpen}\r\n        onClose={onClose}\r\n        onSubmit={handleSubmit}\r\n        isLoading={isLoading}\r\n      ></PopupWithForm>\r\n    );\r\n  }\r\nexport default ConfirmPopup;","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\n\r\nconst ProtectedRoute = ({component: Component, ...props}) => {\r\n    return(\r\n        <Route>\r\n            {\r\n\r\n                () => props.loggedIn ? <Component {...props}/> : <Redirect to='./login'/>\r\n            }\r\n            </Route>\r\n      \r\n    )\r\n}\r\nexport default ProtectedRoute;","\r\nimport React from 'react';\r\nimport PopupWithForm from './PopupWithForm';\r\n\r\nfunction InfoTooltip(props) {\r\n  const { isOpen, onClose, loggedIn, message } = props;\r\n\r\n  return (\r\n    <PopupWithForm\r\n      formName='infoTooltip'\r\n      noConfirm={true}\r\n      isOpen={isOpen}\r\n      onClose={onClose}\r\n      loggedIn={loggedIn}\r\n      isPopup={true}\r\n    >\r\n      <img src={message.iconPath} alt='Иконка авторизации' className='form__icon' />\r\n      <p className='infoToolTip__text'>{message.text}</p>\r\n\r\n    </PopupWithForm >\r\n  );\r\n}\r\n\r\nexport default InfoTooltip;","class BadRequestError extends Error{\r\n    constructor(message, ...rest){\r\n        super(...rest);\r\n        this.status = 401;\r\n        this.message = message;\r\n    }\r\n}\r\nexport default BadRequestError;","class NotAuthorizedError extends Error{\r\n    constructor(message, ...rest){\r\n        super(...rest);\r\n        this.status = 400;\r\n        this.message = message;\r\n    }\r\n}\r\nexport default NotAuthorizedError;","import BadRequestError from '../errors/badRequestError';\r\nimport NotAuthorizedError from '../errors/notAuthorizedError';\r\n// старый вариант\r\n// export const BASE_URL = 'https://auth.nomoreparties.co';\r\n\r\nexport const BASE_URL = 'https://www.api.advent.students.nomoredomains.rocks';\r\n\r\n// Отправляем запрос на регистрацию\r\nexport const register = (password, email) => fetch(`${BASE_URL}/signup`, {\r\n  method: 'POST',\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n  },\r\n  body: JSON.stringify({ password, email }),\r\n})\r\n  .then((res) => {\r\n    if (!res.ok) {\r\n      return res.json()\r\n        .then((err) => {\r\n          if (err.error) {\r\n            throw new BadRequestError(err.error);\r\n          } else {\r\n            throw new BadRequestError(err.message);\r\n          }\r\n        });\r\n    }\r\n    return res.json();\r\n});\r\n\r\n\r\n\r\n// Отправляем запрос на авторизацию\r\nexport const authorize = (password, email) => fetch(`${BASE_URL}/signin`, {\r\n  method: 'POST',\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n  },\r\n  body: JSON.stringify({ password, email }),\r\n})\r\n  .then((res) => {\r\n    if (res.status === 400) {\r\n      throw new BadRequestError('Не передано одно из полей');\r\n    }\r\n    else if (res.status === 401) {\r\n      throw new NotAuthorizedError('Пользователь с таким email не найден');\r\n    }\r\n    return res.json();\r\n  })\r\n  .then((data) => {\r\n    if (data.token) {\r\n      localStorage.setItem('jwt', data.token);\r\n      return data.token;\r\n    }\r\n  });\r\n\r\n\r\n\r\n// Отправляем запрос на получение токена\r\nexport const getContent = (token) => fetch(`${BASE_URL}/users/me`, {\r\n  method: 'GET',\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n    'Authorization': `Bearer ${token}`,\r\n  },\r\n})\r\n  .then((res) => {\r\n    if (!res.ok) {\r\n      return res.json()\r\n        .then((err) => {\r\n          throw new NotAuthorizedError(err.message);\r\n        });\r\n    }\r\n    return res.json()\r\n  })\r\n  .then((data) => data);","  \r\nimport React, { useState, useRef } from 'react';\r\nimport Form from './Form';\r\n\r\nfunction AuthorizeForm({onSubmit, title, submitButtonText, path,\r\n    loginText, loginLink, autoCompleteEmail, autoCompletePassword}){\r\n       \r\n       \r\n       \r\n        const [email, setEmail] = useState('');\r\n        const [password, setPassword] = useState('');\r\n        const [emailError, setEmailError] = useState('');\r\n        const [passwordError, setPasswordError] = useState('');\r\n        const [emailValid, setEmailValid] = useState(false);\r\n        const [passwordValid, setPasswordValid] = useState(false);\r\n\r\n        const emailRef = useRef();\r\n        const passwordRef = useRef();\r\n      \r\n        function handleChange(evt) {\r\n          const { value } = evt.target;\r\n          evt.target.name === 'email'\r\n            ? setEmail(value)\r\n            : setPassword(value);\r\n          validate();\r\n        }\r\n      \r\n        function validate() {\r\n          setEmailError(emailRef.current.validationMessage);\r\n          setPasswordError(passwordRef.current.validationMessage);\r\n          !emailRef.current.validity.valid ? setEmailValid(false) : setEmailValid(true);\r\n          !passwordRef.current.validity.valid ? setPasswordValid(false) : setPasswordValid(true);\r\n        }\r\n\r\n        function handleSubmit(evt) {\r\n            evt.preventDefault();\r\n            if (!email && !password) return;\r\n            onSubmit(password, email);\r\n            setEmail('');\r\n            setPassword('');\r\n        }\r\n\r\n    \r\n    \r\n        return(\r\n        <section className=\"authorize\">\r\n            <Form\r\n                id='authForm'\r\n                formName='signin'\r\n                title={title}\r\n                submitButtonText={submitButtonText}\r\n                isPopup={false}\r\n                path={path}\r\n                loginText={loginText}\r\n                loginLink={loginLink}\r\n                onSubmit={handleSubmit}\r\n            >\r\n            <label htmlFor=\"email\" className=\"authorize__form-label\">\r\n                <input \r\n                    ref={emailRef}\r\n                    id=\"email\" \r\n                    type=\"email\" \r\n                    placeholder=\"Email\" \r\n                    className=\"authorize__form-input\"\r\n                    name='email'\r\n                    value={email || ''}\r\n                    minLength='6'\r\n                    maxLength='40'\r\n                    autoComplete={autoCompleteEmail}\r\n                    required\r\n                    onChange={handleChange}\r\n                />\r\n\r\n            <span className={`popup__input-error ${!emailValid && 'authorize__form-error_visible'}`} id='email-error'>\r\n                {emailError}\r\n            </span>\r\n\r\n            </label>\r\n\r\n            <label htmlFor=\"password\" className=\"authorize__form-label\">\r\n                <input \r\n                    ref={passwordRef}\r\n                    id=\"password\" \r\n                    type=\"password\" \r\n                    placeholder=\"Пароль\" \r\n                    className=\"authorize__form-input\"\r\n                    name='password'\r\n                    value={password || ''}\r\n                    minLength='8'\r\n                    maxLength='30'\r\n                    autoComplete={autoCompletePassword}\r\n                    required\r\n                    onChange={handleChange}\r\n                />\r\n                <span className={`popup__input-error ${!passwordValid && 'authorize__form-error_visible'}`}\r\n                        id='password-error'>\r\n                    {passwordError}\r\n                </span>\r\n            </label>\r\n            \r\n            </Form>\r\n\r\n        </section>\r\n    )\r\n}\r\nexport default AuthorizeForm;","import React from 'react';\r\nimport AuthorizeForm from './AuthorizeForm';\r\n\r\nfunction Login({ onLogin }){\r\n    \r\n    function submitForm(password, email) {\r\n        onLogin(password, email);\r\n      }\r\n    return(\r\n        <AuthorizeForm\r\n            title='Вход'\r\n            submitButtonText='Войти'\r\n            path='/sign-up'\r\n            onSubmit={submitForm}\r\n            autoCompleteEmail='email'\r\n            autoCompletePassword='current-password'\r\n        />\r\n    )\r\n}\r\n\r\nexport default Login;","import React from 'react';\r\nimport AuthorizeForm from './AuthorizeForm';\r\n\r\nfunction Register({ onRegister }){\r\n    function submitForm(password, email) {\r\n        onRegister(password, email);\r\n      }\r\n    \r\n\r\n    return(\r\n        <AuthorizeForm\r\n            title='Регистрация'\r\n            submitButtonText='Зарегистрироваться'\r\n            path='/sign-in'\r\n            loginText='Уже зарегистрированы?'\r\n            loginLink='Войти'\r\n            onSubmit={submitForm}\r\n        />\r\n    )\r\n}\r\n\r\nexport default Register;","export default __webpack_public_path__ + \"static/media/resolve.1b6082f8.svg\";","export default __webpack_public_path__ + \"static/media/reject.df8eddf6.svg\";","export default __webpack_public_path__ + \"static/media/loading.65f78576.svg\";","\r\nimport React, { useState }  from 'react';\r\nimport {\r\n  Route, Switch, useLocation, Redirect, useHistory,\r\n} from 'react-router-dom';\r\n\r\nimport '../index.css';\r\nimport { api } from '../utils/Api.js';\r\nimport Header from '../components/Header.js';\r\nimport Main from '../components/Main.js';\r\nimport Footer from '../components/Footer.js';\r\nimport ImagePopup from '../components/ImagePopup.js';\r\nimport EditAvatarPopup from '../components/EditAvatarPopup.js';\r\nimport EditProfilePopup from '../components/EditProfilePopup.js';\r\nimport AddPlacePopup from '../components/AddPlacePopup.js';\r\nimport ConfirmPopup from './ConfirmPopup.js';\r\nimport ProtectedRoute from './ProtectedRoute';\r\nimport InfoTooltip from './InfoTooltip';\r\nimport * as auth from '../utils/auth';\r\nimport { CurrentUserContext }  from '../contexts/CurrentUserContext.js'\r\nimport Login from './Login';\r\nimport Register from './Register';\r\nimport resolvePath from '../images/resolve.svg';\r\nimport rejectPath from '../images/reject.svg';\r\nimport loading from '../images/loading.svg';\r\n\r\n\r\nfunction App() {\r\n\r\n  const [isEditProfilePopupOpen, setEditProfilePopupOpen] = useState(false);\r\n  const [isAddPlacePopupOpen, setAddPlacePopupOpen] = useState(false);\r\n  const [isEditAvatarPopupOpen, setEditAvatarPopupOpen] = useState(false);\r\n  const [isConfirmPopupOpen, setConfirmPopupOpen] = useState(false);\r\n  const [cards, setCards] = useState([]);\r\n  const [selectedCard, setSelectedCard] = useState({\r\n    isImageOpen: false,\r\n    link: '',\r\n    name: '',\r\n  });\r\n\r\n  const [currentUser, setCurrentUser] = useState({})\r\n  const [cardToDelete, setCardToDelete] = useState({});\r\n  const [isLoading, setLoading] = useState(false);\r\n\r\n  // авторизация\r\n  const [loggedIn, setLoggedIn] = useState(false);\r\n  const [email, setEmail] = useState('');\r\n  const [isAuthInfoOpened, setAuthInfoOpened] = useState(false);\r\n  const [isInfoTooltipOpen, setInfoTooltipOpen] = useState(false);\r\n  const [message, setMessage] = useState({\r\n    iconPath: loading,\r\n    text: ''\r\n  });\r\n  const location = useLocation();\r\n  const history = useHistory();\r\n  const escape = require('escape-html');\r\n\r\n  // Проверить токен\r\n  React.useEffect(() => {\r\n    const jwt = localStorage.getItem('jwt');\r\n    if (jwt) {\r\n      auth.getContent(jwt)\r\n        .then((res) => {\r\n          setLoggedIn(true);\r\n          setEmail(res.data.email);\r\n          history.push('/');\r\n        })\r\n        .catch(err => console.log(err));\r\n    }\r\n  }, [history]);\r\n\r\n  // Регистрация\r\n  function handleRegister(password, email) {\r\n    auth.register(escape(password), email)\r\n      .then(() => {\r\n        setMessage({ iconPath: resolvePath, text: 'Вы успешно зарегистрировались!' });\r\n        history.push('/sign-in');\r\n      })\r\n      .catch((err) => setMessage({ iconPath: rejectPath, text: err.message }));\r\n    setInfoTooltipOpen(true);\r\n  }\r\n\r\n  // Авторизация\r\n  function handleLogin(password, email) {\r\n    auth.authorize(escape(password), email)\r\n      .then((data) => {\r\n        auth.getContent(data)\r\n          .then((res) => {\r\n            setEmail(res.data.email);\r\n          })\r\n          .catch(err => console.log(err));\r\n        setLoggedIn(true);\r\n        setMessage({ iconPath: resolvePath, text: 'Вы успешно вошли в приложение!' });\r\n        history.push('/');\r\n      })\r\n      .catch((err) => setMessage({ iconPath: rejectPath, text: err.message }))\r\n    setInfoTooltipOpen(true);\r\n  }\r\n\r\n  // Выход\r\n  function handleSignOut() {\r\n    setLoggedIn(false);\r\n    localStorage.removeItem('jwt');\r\n    setEmail('');\r\n    history.push('/sign-in');\r\n  }\r\n\r\n  //данные о текущем пользователе\r\n  React.useEffect(() => {\r\n    api\r\n      .getUserInfo()\r\n      .then((currentUserInfoData) => {\r\n        setCurrentUser(currentUserInfoData);\r\n      })\r\n      .catch((err) =>\r\n        console.log(`Ошибка при загрузке информации о пользователе: ${err}`)\r\n      );\r\n  }, []);\r\n\r\n  //Открыть попап аватара\r\n  function handleEditAvatarClick() {\r\n    setEditAvatarPopupOpen(true);\r\n  }\r\n  //Открыть попап профииля\r\n  function handleEditProfileClick() {\r\n    setEditProfilePopupOpen(true);\r\n  }\r\n  //Открыть попап карточки\r\n  function handleAddPlaceClick() {\r\n    setAddPlacePopupOpen(true);\r\n  }\r\n  // открыть фулсайз фото\r\n  function handleCardClick(card) {\r\n    const { link, name } = card;\r\n    setSelectedCard({ isImageOpen: true, link: link, name: name });\r\n  }\r\n  function handleCardLike(card) {\r\n    // Снова проверяем, есть ли уже лайк на этой карточке\r\n    const isLiked = card.likes.some(i => i._id === currentUser._id);\r\n    // Отправляем запрос в API и получаем обновлённые данные карточки\r\n    api\r\n      .changeLikeCardStatus(card._id, !isLiked)\r\n      .then((newCard) => {\r\n        // Формируем новый массив на основе имеющегося, подставляя в него новую карточку\r\n      const newCards = cards.map((c) => c._id === card._id ? newCard : c);\r\n      // Обновляем стейт\r\n      setCards(newCards);\r\n    })\r\n    .catch((err) =>\r\n        console.log(`Ошибка при постановке лайка: ${err}`)\r\n    );\r\n  } \r\n   //Удалить карточку после подтверждения\r\n   function handleConfirm() {\r\n    api\r\n      .deleteCard(cardToDelete._id)\r\n      .then(() =>{\r\n        setCards(cards.filter((item) => item !== cardToDelete))\r\n        closeAllPopups();\r\n      })\r\n      .catch((err) => console.log(`Ошибка при удалении карточки: ${err}`));\r\n    \r\n  }\r\n  //Кликнуть на удаление карточки\r\n  function handleCardDelete(card) {\r\n    setConfirmPopupOpen(true);\r\n    setCardToDelete(card);\r\n  }\r\n  //Закрыть все попапы\r\n  function closeAllPopups() {\r\n    setEditProfilePopupOpen(false);\r\n    setEditAvatarPopupOpen(false);\r\n    setAddPlacePopupOpen(false);\r\n    setSelectedCard({});\r\n    setConfirmPopupOpen(false);\r\n    setInfoTooltipOpen(false)\r\n  }\r\n  //Обновить аватар\r\n  function handleUpdateAvatar(newAvatar) {\r\n      setLoading(true);\r\n      api\r\n        .setUserAvatar(newAvatar)\r\n        .then((res) => {\r\n          setCurrentUser(res);\r\n          closeAllPopups();\r\n        })\r\n        .catch((err) => console.log(`Ошибка при обновлении аватара: ${err}`))\r\n        .finally(() => setLoading(false));\r\n        \r\n  }\r\n  //Обновить данные пользователя\r\n  function handleUpdateUser(userData) {\r\n      setLoading(true);\r\n      api\r\n        .updateUserInfo(userData)\r\n        .then((newUser) => {\r\n          setCurrentUser(newUser);\r\n          closeAllPopups();\r\n        })\r\n        .catch((err) => `Ошибка при обновлении информации о пользователе: ${err}`)\r\n        .finally(() => setLoading(false));\r\n      \r\n  }\r\n  //Получить данные карточек с фото\r\n  React.useEffect(() => {\r\n      api\r\n        .getInitialCards()\r\n        .then((cardData) => {\r\n          setCards(cardData);\r\n        })\r\n        .catch((err) => console.log(`Ошибка при загрузке карточек: ${err}`));\r\n  }, []);\r\n  \r\n  function handleAddPlace(card) {\r\n      setLoading(true);\r\n      api\r\n        .postNewCard(card)\r\n        .then((newCard) => {\r\n          setCards([newCard, ...cards]);\r\n          closeAllPopups();\r\n        })\r\n        .catch((err) =>\r\n          console.log(`Ошибка при добавлении новой карточки: ${err}`)\r\n        )\r\n        .finally(() => setLoading(false));\r\n      \r\n  }\r\n    \r\n  return (\r\n    <CurrentUserContext.Provider value={currentUser}>\r\n        <div className=\"root\">\r\n          <div className=\"page\">\r\n          {(loggedIn && isAuthInfoOpened)}\r\n\r\n            <Header loggedIn={loggedIn}\r\n                    locaction={location}\r\n                    email={email}\r\n                    signOut={handleSignOut}\r\n                    isAuthInfoOpened={isAuthInfoOpened}\r\n            />\r\n            <Switch>\r\n      \r\n            <ProtectedRoute exact path=\"/\" loggedIn={loggedIn} component={Main}\r\n                    cards={cards}\r\n                    onCardClick={handleCardClick}\r\n                    onCardLike={handleCardLike}\r\n                    onCardDelete={handleCardDelete}\r\n                    onEditProfile={handleEditProfileClick}\r\n                    onAddPlace={handleAddPlaceClick}\r\n                    onEditAvatar={handleEditAvatarClick}\r\n            />\r\n          <Route path='/sign-in'>\r\n            <Login onLogin={handleLogin} />\r\n          </Route>\r\n         \r\n          <Route path='/sign-up'>\r\n            <Register onRegister={handleRegister} />\r\n          </Route>\r\n          <Route>\r\n            {loggedIn ? <Redirect to=\"/\" /> : <Redirect to=\"/sign-in\" />}\r\n          </Route>\r\n        </Switch>\r\n\r\n        <Footer />\r\n\r\n        <InfoTooltip\r\n          isOpen={isInfoTooltipOpen}\r\n          onClose={closeAllPopups}\r\n          loggedIn={loggedIn}\r\n          message={message}\r\n        />\r\n\r\n            <EditProfilePopup\r\n              isOpen={isEditProfilePopupOpen}\r\n              onClose={closeAllPopups}\r\n              onUpdateUser={handleUpdateUser}\r\n              isLoading={isLoading}\r\n            />\r\n            <EditAvatarPopup\r\n              onUpdateAvatar={handleUpdateAvatar}\r\n              isOpen={isEditAvatarPopupOpen}\r\n              onClose={closeAllPopups}\r\n              isLoading={isLoading}\r\n            />\r\n            <AddPlacePopup\r\n              isOpen={isAddPlacePopupOpen}\r\n              onClose={closeAllPopups}\r\n              onAddPlace={handleAddPlace}\r\n            />\r\n            <ConfirmPopup\r\n              isOpen={isConfirmPopupOpen}\r\n              onClose={closeAllPopups}\r\n              onConfirmDelete={handleConfirm}\r\n            />\r\n          \r\n            <ImagePopup \r\n            name={selectedCard.name}\r\n            link={selectedCard.link}\r\n            isOpen={selectedCard.isImageOpen}\r\n            onClose={closeAllPopups}\r\n            />\r\n            \r\n          </div>\r\n        </div>\r\n    </CurrentUserContext.Provider>\r\n  );\r\n}\r\n\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './components/App.js';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n     <BrowserRouter basename=\"/\">\r\n      <App />\r\n    </BrowserRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}