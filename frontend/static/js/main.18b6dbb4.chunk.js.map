{"version":3,"sources":["images/headerlogo.svg","components/AuthInfo.js","components/Header.js","contexts/CurrentUserContext.js","components/Card.js","components/Main.js","components/Footer.js","components/ImagePopup.js","components/Form.js","components/PopupWithForm.js","components/EditAvatarPopup.js","components/EditProfilePopup.js","components/AddPlacePopup.js","components/ConfirmPopup.js","components/ProtectedRoute.js","components/InfoTooltip.js","utils/auth.js","components/AuthorizeForm.js","components/Login.js","components/Register.js","images/resolve.svg","images/reject.svg","images/loading.svg","components/App.js","reportWebVitals.js","index.js"],"names":["AuthInfo","email","signOut","className","href","onClick","Header","loggedIn","pathname","useLocation","linkText","linkPath","src","headerLogo","alt","to","CurrentUserContext","React","createContext","Card","card","onCardClick","onCardLike","onCardDelete","currentUser","useContext","isOwn","owner","_id","cardDeleteButtonClassName","isLiked","likes","some","i","cardLikeButtonClassName","link","name","type","length","Main","onEditAvatar","onEditProfile","onAddPlace","cards","avatar","about","map","Footer","ImagePopup","isOpen","onClose","Form","formName","formId","onSubmit","title","children","isLoading","submitButtonText","isPopup","path","loginText","loginLink","noConfirm","disabled","id","PopupWithForm","EditAvatarPopup","onUpdateAvatar","inputRef","useRef","evt","preventDefault","current","value","htmlFor","ref","required","placeholder","EditProfilePopup","props","onUpdateUser","useState","setName","description","setDescription","useEffect","pattern","minLength","maxLength","autoComplete","onChange","target","AddPlacePopup","setLink","ConfirmPopup","onConfirmDelete","ProtectedRoute","Component","component","InfoTooltip","message","iconPath","text","BASE_URL","handlePromiseRes","res","ok","json","Promise","reject","status","headers","getUserInfo","fetch","credentials","then","getInitialCards","AuthorizeForm","autoCompleteEmail","autoCompletePassword","setEmail","password","setPassword","emailError","setEmailError","passwordError","setPasswordError","emailValid","setEmailValid","passwordValid","setPasswordValid","emailRef","passwordRef","handleChange","validationMessage","validity","valid","Login","onLogin","Register","onRegister","App","isEditProfilePopupOpen","setEditProfilePopupOpen","isAddPlacePopupOpen","setAddPlacePopupOpen","isEditAvatarPopupOpen","setEditAvatarPopupOpen","isConfirmPopupOpen","setConfirmPopupOpen","setCards","isImageOpen","selectedCard","setSelectedCard","setCurrentUser","cardToDelete","setCardToDelete","setLoading","setLoggedIn","isAuthInfoOpened","isInfoTooltipOpen","setInfoTooltipOpen","loading","setMessage","location","history","useHistory","closeAllPopups","auth","user","catch","err","console","log","initialCards","reverse","cardData","Provider","locaction","exact","method","newCard","newCards","c","body","JSON","stringify","data","resolvePath","push","rejectPath","userData","newUser","finally","newAvatar","filter","item","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","basename","document","getElementById"],"mappings":"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","file":"static/js/main.18b6dbb4.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/headerlogo.c2821b38.svg\";","import React from 'react';\r\n\r\nfunction AuthInfo({ email, signOut }) {\r\n  return (\r\n    <div className='auth-info'>\r\n      <span>{email}</span>\r\n      <a href='/sign-in' className='header__link' onClick={signOut}>Выйти</a>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AuthInfo;","import React from 'react';\r\nimport headerLogo from '../images/headerlogo.svg';\r\n\r\nimport { Link, useLocation } from 'react-router-dom';\r\nimport AuthInfo from './AuthInfo';\r\n\r\nfunction Header\r\n  ({\r\n    loggedIn, email, signOut\r\n  }) \r\n \r\n  {\r\n\r\n  const { pathname } = useLocation();\r\n\r\n  const linkText = `${pathname === '/sign-in' ? 'Регистрация' : 'Войти'}`;\r\n  const linkPath = `${pathname === '/sign-in' ? '/sign-up' : '/sign-in'}`;\r\n\r\n  return (\r\n    <header className=\"header section\">\r\n     <img className=\"header__logo-image\" src={headerLogo} alt=\"логотип сайта\"/>\r\n     {loggedIn\r\n        ? (<>\r\n          <AuthInfo email={email} signOut={signOut} />\r\n        </>)\r\n        : (<Link to={linkPath} className=\"link header__link\">{linkText}</Link>)\r\n      }\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\n\r\nexport const CurrentUserContext = React.createContext();","import React from 'react';\r\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\r\n\r\nfunction Card({card, onCardClick, onCardLike, onCardDelete}) {\r\n\r\n\r\nfunction handleClick() {\r\n    onCardClick(card);\r\n}\r\n   const currentUser = React.useContext(CurrentUserContext);\r\n\r\n    // Определяем, являемся ли мы владельцем текущей карточки\r\n    const isOwn = card.owner._id === currentUser._id;\r\n\r\n    // Создаём переменную, которую после зададим в `className` для кнопки удаления\r\n    const cardDeleteButtonClassName = (\r\n    `elements__delete ${isOwn ? 'elements__delete_visible' : 'elements__delete'}`\r\n    ); \r\n    const isLiked = card.likes.some((i) => i._id === currentUser._id);\r\n\r\n    const cardLikeButtonClassName = `elements__text-like ${\r\n      isLiked && 'elements__text-like_active'\r\n    }`;\r\n\r\n      function handleLikeClick() {\r\n        onCardLike(card);\r\n      }\r\n    \r\n      function handleDeleteClick() {\r\n        onCardDelete(card);\r\n    }\r\n\r\n    return (\r\n        <li className=\"elements__item\">\r\n            <img className=\"elements__item-img\" src={card.link}\r\n                alt={card.name}\r\n                onClick={handleClick}/>\r\n            <button type=\"button\" \r\n            className={cardDeleteButtonClassName}\r\n            onClick={handleDeleteClick} >\r\n            </button>\r\n            <div className=\"elements__text\">\r\n            <h3 className=\"elements__text-title\">{card.name}</h3>\r\n            <div className=\"elements__text_count\">\r\n            <button type=\"button\"  \r\n            className={cardLikeButtonClassName}\r\n            onClick={handleLikeClick} >\r\n          </button>\r\n            <div className=\"elements__text-likecounter\">{card.likes.length}</div>\r\n            </div>\r\n            </div>\r\n        </li>\r\n        \r\n    )\r\n\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\nimport Card from './Card';\r\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\r\n\r\nfunction Main({ onEditAvatar,onEditProfile,onAddPlace,cards,onCardClick, onCardDelete, onCardLike}){\r\n  const currentUser = React.useContext(CurrentUserContext);\r\n\r\n    return (\r\n        <div className=\"content section\">\r\n        <section className=\"profile section\">\r\n          <div className=\"profile__section\">\r\n            <div className=\"profile__avatar\">\r\n              <img className=\"profile__avatarimage\"\r\n                    alt='Аватар профиля'\r\n                    src={currentUser.avatar}\r\n                    />\r\n              <div className=\"profile__cover\">\r\n                <button type=\"button\" className=\"profile__avatarbutton\" onClick={onEditAvatar}></button>\r\n              </div>\r\n            </div>\r\n            <div className=\"profile__intro\">\r\n              <div className=\"intro\">\r\n              <h1 className=\"intro__title\">{currentUser.name}</h1>\r\n                <p className=\"intro__subtitle\">{currentUser.about}</p>\r\n              </div>\r\n              <button type=\"button\" className=\"profile__edit-button\" onClick={onEditProfile}></button>\r\n            </div>\r\n          </div>\r\n          <button type=\"button\" className=\"profile__button\" onClick={onAddPlace}></button>\r\n        </section>\r\n        <ul className=\"elements__list\">\r\n         {cards.map((card) => (\r\n        <Card\r\n          key={card._id}\r\n          card={card}\r\n          onCardClick={onCardClick}\r\n          onCardLike={onCardLike}\r\n          onCardDelete={onCardDelete}\r\n        />\r\n      ))}\r\n       </ul>\r\n      </div>\r\n    )\r\n}\r\nexport default Main;\r\n\r\n\r\n","import React from 'react';\r\n\r\nfunction Footer(){\r\n    return (\r\n    <footer className=\"footer section\">\r\n      <p className=\"footer__copyright\">© 2020 Mesto Russia</p>\r\n    </footer>\r\n    )\r\n}\r\n\r\nexport default Footer;","\r\nimport React from 'react';\r\n\r\nfunction ImagePopup({isOpen, onClose, link, name}) {\r\n  return (\r\n    <div className={`popup ${isOpen && 'popup_opened'}`}>\r\n      <div className=\"popup__background popup__background_photo\"></div>\r\n        <div className=\"popup__photo-container\">\r\n          <button type=\"reset\" className=\"popup__button\" onClick={onClose}></button>\r\n            <img className=\"popup__image\" src={link} alt={name}/>\r\n            <h2 className=\"popup__title popup__title_photo\">{name}</h2>\r\n        </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ImagePopup;\r\n\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction Form\r\n({\r\n    formName,\r\n    formId,\r\n    onSubmit,\r\n    title,\r\n    children,\r\n    isLoading,\r\n    submitButtonText,\r\n    isPopup,\r\n    path,\r\n    loginText,\r\n    loginLink,\r\n    noConfirm,\r\n    disabled,\r\n    onClose\r\n})\r\n    {\r\n        return(\r\n            <form \r\n            name={formName} \r\n            id={formId}\r\n            onSubmit={onSubmit}\r\n            className={`${isPopup && 'popup__form'} popup__form_type_${formName}`}>\r\n                \r\n                <h2 className={`${!isPopup && 'authorize__form-title'} popup__title`}>{title}</h2>\r\n                {children}\r\n\r\n                {!noConfirm\r\n          && (<button type=\"submit\" className={`${!isPopup && 'authorize__form-button'} popup__submit`}\r\n                        disabled={disabled}>\r\n                        {isLoading ? `Сохранение...` : submitButtonText}\r\n                </button>)}\r\n\r\n                {isPopup && (<button type=\"reset\" className=\"popup__button\" onClick={onClose}/>)}\r\n\r\n                {!isPopup && (<span className=\"authorize__form-quest\">{loginText}<Link to={path} className=\"authorize__form-quest authorize__form-link\">{loginLink}</Link></span>)}\r\n\r\n            </form>\r\n        )\r\n\r\n}\r\n\r\nexport default Form;","import React from 'react';\r\nimport Form  from './Form';\r\n\r\nfunction PopupWithForm\r\n  ({ \r\n    isOpen,\r\n    formId,\r\n    onSubmit,\r\n    onClose,\r\n    formName,\r\n    title,\r\n    children,\r\n    submitButtonText,\r\n    disabled,\r\n    isLoading,\r\n    noConfirm\r\n  })\r\n  {\r\n    return(\r\n         <section className={`popup ${isOpen && 'popup_opened'}`}>\r\n          <div className=\"popup__background\"></div>\r\n\r\n          <Form\r\n            id={formId}\r\n            isPopup={true}\r\n            name={formName}\r\n            onSubmit={onSubmit}\r\n            onClose={onClose}\r\n            isLoading={isLoading}\r\n            title={title}\r\n            children={children}\r\n            disabled={disabled}\r\n            submitButtonText={submitButtonText}\r\n            noConfirm={noConfirm}\r\n          ></Form>\r\n\r\n      </section>\r\n    )\r\n\r\n}\r\n\r\nexport default PopupWithForm;","import React, {useRef} from 'react';\r\nimport PopupWithForm from './PopupWithForm';\r\n\r\nfunction EditAvatarPopup({isOpen, onClose, onUpdateAvatar, isLoading }) {\r\n\r\n  const inputRef = useRef('');\r\n\r\n  function handleSubmit(evt) {\r\n    evt.preventDefault();\r\n    onUpdateAvatar({ avatar: inputRef.current.value });\r\n  }\r\n\r\n  return (\r\n    <PopupWithForm\r\n      name='popup'\r\n      id = 'popup-editavatar-form'\r\n      title='Обновить аватар'\r\n      submitButtonText='Сохранить'\r\n      isOpen={isOpen}\r\n      onClose={onClose}\r\n      onSubmit={handleSubmit}\r\n      isLoading={isLoading}\r\n    >\r\n     <label htmlFor='avatar' className=\"popup__input-label\">\r\n          <input \r\n            ref={inputRef}\r\n            type='url'\r\n            name=\"avatar\" \r\n            className=\"popup__input popup__input_avatar\" \r\n            required \r\n            placeholder=\"Ссылка на аватар\"\r\n          />\r\n          <span className='popup__input-error' id=\"avatar-error\"></span>\r\n        </label>\r\n    </PopupWithForm>\r\n  );\r\n}\r\n\r\nexport default EditAvatarPopup;\r\n","import React, { useState } from 'react';\r\nimport PopupWithForm from './PopupWithForm';\r\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\r\n\r\nfunction EditProfilePopup(props) {\r\n  const {isOpen, onClose, onUpdateUser, isLoading } = props\r\n  const currentUser = React.useContext(CurrentUserContext);\r\n\r\n  const [name, setName] = useState('');\r\n  const [description, setDescription] = useState('');\r\n\r\n  React.useEffect(() => {\r\n    setName(currentUser.name);\r\n    setDescription(currentUser.about);\r\n  }, [currentUser]);\r\n\r\n  function handleChangeName(evt) {\r\n    if(evt.target.name === 'name')\r\n      setName(evt.target.value)\r\n  }\r\n  function handleChangeDescription(evt) {\r\n    if(evt.target.name === 'about')\r\n      setDescription(evt.target.value);\r\n  }\r\n\r\n  function handleSubmit(evt) {\r\n    evt.preventDefault();\r\n    onUpdateUser({\r\n      name: name,\r\n      about: description,\r\n    });\r\n  }\r\n\r\n    return (\r\n      <PopupWithForm\r\n        name='popup'\r\n        id = 'popup-edit-form'\r\n        title='Редактировать профиль'\r\n        submitButtonText='Сохранить'\r\n        isOpen={isOpen}\r\n        onClose={onClose}\r\n        onSubmit={handleSubmit}\r\n        isLoading={isLoading}  \r\n      >\r\n        <label htmlFor='name' className=\"popup__input-label\">\r\n        <input  \r\n          name=\"name\"\r\n          value={name || ''}\r\n          className=\"popup__input popup__input_name\" \r\n          type=\"text\" \r\n          required \r\n          pattern='[А-Яа-яA-Za-z -]{1,}'\r\n          placeholder=\"Введите имя\" \r\n          minLength =\"2\" \r\n          maxLength =\"40\" \r\n          autoComplete=\"off\"\r\n          onChange={handleChangeName}\r\n        />\r\n        <span className='popup__input-error' id=\"name-error\"></span>\r\n        </label>\r\n        <label htmlFor='about' className=\"popup__input-label\">\r\n        <input \r\n          type='text'\r\n          name=\"about\" \r\n          className=\"popup__input popup__input_job\" \r\n          value={description || ''}\r\n          required \r\n          placeholder=\"Чем вы занимаетесь?\" \r\n          minLength =\"2\" \r\n          maxLength =\"200\" \r\n          autoComplete=\"off\"\r\n          onChange={handleChangeDescription}\r\n        />\r\n        <span className='popup__input-error' id=\"about-error\"></span>\r\n        </label>\r\n        </PopupWithForm>\r\n    );\r\n  }\r\nexport default EditProfilePopup;","import React, { useState }  from 'react';\r\nimport PopupWithForm from './PopupWithForm';\r\n\r\n\r\n\r\nfunction AddPlacePopup({isOpen,onClose, onAddPlace, isLoading }) {\r\n\r\n  const [name, setName] = useState('');\r\n  const [link, setLink] = useState('');\r\n  \r\n  React.useEffect(() => {\r\n    setName('');\r\n    setLink('');\r\n  }, [isOpen]);\r\n\r\n  function handleChangeCardName(evt) {\r\n    if(evt.target.name === 'name')\r\n      setName(evt.target.value)\r\n      // : setLink(evt.target.value);\r\n  }\r\n  function handleChangeCardLink(evt) {\r\n    if(evt.target.name === 'link')\r\n      // ? setName(evt.target.value)\r\n      setLink(evt.target.value);\r\n  }\r\n\r\n  function handleSubmit(evt) {\r\n    evt.preventDefault();\r\n    onAddPlace({\r\n      name,\r\n      link,\r\n    });\r\n  }\r\n\r\n  return (\r\n    <PopupWithForm\r\n      formName='popup'\r\n      formId = 'popup-addCard'\r\n      title='Новое место'\r\n      submitButtonText='Сохранить'\r\n      isOpen={isOpen}\r\n      onClose={onClose}\r\n      onSubmit={handleSubmit}\r\n      isLoading={isLoading}\r\n    >\r\n      <label htmlFor='name' className=\"popup__input-label\">\r\n            <input \r\n            id='name'\r\n            name='name'\r\n            value={name || ''}\r\n            placeholder='Название'\r\n            minLength='1'\r\n            maxLength='30'\r\n            required\r\n            onChange={handleChangeCardName}\r\n            className=\"popup__input popup__input_name\"\r\n            type=\"text\" \r\n            autoComplete=\"off\"\r\n             />\r\n            <span className='popup__input-error' \r\n            \r\n          id='name-error'></span>\r\n        </label>\r\n        <label htmlFor='link' className=\"popup__input-label\">   \r\n          <input \r\n          type='url'\r\n          id='link'\r\n          name='link'\r\n          value={link || ''}\r\n          placeholder='Ссылка на картинку'\r\n          required\r\n          onChange={handleChangeCardLink}\r\n          className=\"popup__input popup__input_link\" \r\n          autoComplete=\"off\" \r\n          minLength =\"2\" \r\n          maxLength =\"200\"/>\r\n          <span className='popup__input-error' id=\"link-error\"></span>\r\n        </label>\r\n    </PopupWithForm>\r\n  );\r\n}\r\n\r\nexport default AddPlacePopup;\r\n","import React from 'react';\r\nimport PopupWithForm from './PopupWithForm';\r\n\r\nfunction ConfirmPopup({isOpen, onClose, onConfirmDelete, isLoading}) {\r\n  \r\n  function handleSubmit(evt) {\r\n    evt.preventDefault();\r\n    onConfirmDelete();\r\n  }\r\n\r\n    return (\r\n      <PopupWithForm\r\n        name='popup'\r\n        id = 'popup-deleteCards'\r\n        title='Вы уверенны?'\r\n        submitButtonText='Да'\r\n        isOpen={isOpen}\r\n        onClose={onClose}\r\n        onSubmit={handleSubmit}\r\n        isLoading={isLoading}\r\n      ></PopupWithForm>\r\n    );\r\n  }\r\nexport default ConfirmPopup;","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\n\r\nconst ProtectedRoute = ({component: Component, ...props}) => {\r\n    return(\r\n        <Route>\r\n            {\r\n\r\n                () => props.loggedIn ? <Component {...props}/> : <Redirect to='./login'/>\r\n            }\r\n            </Route>\r\n      \r\n    )\r\n}\r\nexport default ProtectedRoute;","\r\nimport React from 'react';\r\nimport PopupWithForm from './PopupWithForm';\r\n\r\nfunction InfoTooltip(props) {\r\n  const { isOpen, onClose, loggedIn, message } = props;\r\n\r\n  return (\r\n    <PopupWithForm\r\n      formName='infoTooltip'\r\n      noConfirm={true}\r\n      isOpen={isOpen}\r\n      onClose={onClose}\r\n      loggedIn={loggedIn}\r\n      isPopup={true}\r\n    >\r\n      <img src={message.iconPath} alt='Иконка авторизации' className='form__icon' />\r\n      <p className='infoToolTip__text'>{message.text}</p>\r\n\r\n    </PopupWithForm >\r\n  );\r\n}\r\n\r\nexport default InfoTooltip;","// import BadRequestError from '../errors/badRequestError';\r\n// import NotAuthorizedError from '../errors/notAuthorizedError';\r\n// старый вариант\r\n// export const BASE_URL = 'https://auth.nomoreparties.co';\r\n\r\nexport const BASE_URL = 'https://api.advent.students.nomoredomains.rocks';\r\n\r\n\r\n\r\n// // Отправляем запрос за регистрацию\r\n// export const register = (password, email) => fetch(`${BASE_URL}/signup`, {\r\n//   method: 'POST',\r\n//   headers: {\r\n//     'Content-Type': 'application/json',\r\n//   },\r\n//   body: JSON.stringify({ password, email }),\r\n//   credentials: 'include',\r\n// })\r\n//   .then((res) => {\r\n//     if (!res.ok) {\r\n//       return res.json()\r\n//         .then((err) => {\r\n//           if (err.error) {\r\n//             throw new BadRequestError(err.error);\r\n//           } else {\r\n//             throw new BadRequestError(err.message);\r\n//           }\r\n//         });\r\n//     }\r\n//     return res.json();\r\n//   });\r\n\r\n// // // Отправляем запрос за авторизацию\r\n// export const authorize = (password, email) => fetch(`${BASE_URL}/signin`, {\r\n//   method: 'POST',\r\n//   headers: {\r\n//     'Content-Type': 'application/json',\r\n//   },\r\n//   body: JSON.stringify({ password, email }),\r\n//   credentials: 'include',\r\n// })\r\n//   .then((res) => {\r\n//     if (res.status === 400) {\r\n//       throw new BadRequestError('Не передано одно из полей');\r\n//     }\r\n//     else if (res.status === 401) {\r\n//       throw new NotAuthorizedError('Пользователь с таким email не найден');\r\n//     }\r\n//     return res.json();\r\n//   })\r\n\r\n// // Отправляем запрос на получение токена\r\n// export const getContent = () => fetch(`${BASE_URL}/users/me`, {\r\n//   method: 'GET',\r\n//   headers: {\r\n//     'Content-Type': 'application/json',\r\n//     // 'Authorization': `Bearer ${jwt}`,\r\n//     credentials: 'include',\r\n//   },\r\n// })\r\n//   .then((res) => {\r\n//     if (!res.ok) {\r\n//       return res.json()\r\n//         .then((err) => {\r\n//           throw new NotAuthorizedError(err.message);\r\n//         });\r\n//     }\r\n//     return res.json()\r\n//   })\r\n\r\n\r\n\r\n// не мое\r\n  \r\n\r\nexport function handlePromiseRes(res) {\r\n    if (res.ok) {\r\n      return res.json();\r\n    } else {\r\n      return Promise.reject(`Ошибка: ${res.status}`);\r\n    }\r\n  };\r\n\r\n\r\n  export const headers = {\r\n    'Content-Type': 'application/json; charset=utf-8',\r\n  };\r\n\r\n\r\n  export function register({ email, password }) {\r\n    return fetch(`${BASE_URL}/signup`, {\r\n      method: 'POST',\r\n      headers,\r\n      body: JSON.stringify({\r\n        email,\r\n        password\r\n      }),\r\n      credentials: 'include',\r\n    })\r\n      .then((res) => handlePromiseRes(res))\r\n  }\r\n  \r\n  export function authorize({ email, password }) {\r\n    return fetch(`${BASE_URL}/signin`, {\r\n      method: 'POST',\r\n      headers,\r\n      body: JSON.stringify({\r\n        email,\r\n        password\r\n      }),\r\n      credentials: 'include',\r\n    })\r\n      .then((res) => handlePromiseRes(res))\r\n  }\r\n  \r\n  export function signout() {\r\n    return fetch(`${BASE_URL}/signout`, {\r\n      headers,\r\n      credentials: 'include',\r\n    })\r\n      .then((res) => handlePromiseRes(res))\r\n  }\r\n  \r\n  export function getUserInfo() {\r\n    return fetch(`${BASE_URL}/users/me`, {\r\n      headers,\r\n      credentials: 'include',\r\n    })\r\n      .then((res) => handlePromiseRes(res))\r\n  }\r\n  \r\n  export function updateUserInfo({ name, about }) {\r\n    return fetch(`${BASE_URL}/users/me`, {\r\n      method: 'PATCH',\r\n      headers,\r\n      credentials: 'include',\r\n      body: JSON.stringify({\r\n        name,\r\n        about\r\n      })\r\n    })\r\n    .then(res => handlePromiseRes(res))\r\n  }\r\n  \r\n  export function setUserAvatar({ avatar }) {\r\n    return fetch(`${BASE_URL}/users/me/avatar`, {\r\n      method: 'PATCH',\r\n      headers,\r\n      credentials: 'include',\r\n      body: JSON.stringify({\r\n        avatar\r\n      })\r\n    })\r\n    .then(res => handlePromiseRes(res))\r\n  }\r\n  \r\n  export function getInitialCards() {\r\n    return fetch(`${BASE_URL}/cards`, {\r\n      headers,\r\n      credentials: 'include',\r\n    })\r\n    .then(res => handlePromiseRes(res))\r\n  }\r\n  \r\n  export function postNewCard({ name, link }) {\r\n    return fetch(`${BASE_URL}/cards`, {\r\n      method: 'POST',\r\n      headers,\r\n      credentials: 'include',\r\n      body: JSON.stringify({\r\n        name,\r\n        link\r\n      })\r\n    })\r\n    .then(res => handlePromiseRes(res))\r\n  }\r\n  \r\n  export function deleteCard({ _id }) {\r\n    return fetch(`${BASE_URL}/cards/${_id}`, {\r\n      method: 'DELETE',\r\n      headers,\r\n      credentials: 'include',\r\n    })\r\n    .then(res => handlePromiseRes(res))\r\n  }\r\n  \r\n  export function changeLikeCardStatus({ _id }, method) {\r\n    return fetch(`${BASE_URL}/cards/${_id}/likes`, {\r\n      method,\r\n      headers,\r\n      credentials: 'include',\r\n    })\r\n    .then(res => handlePromiseRes(res))\r\n  }\r\n\r\n\r\n","  \r\nimport React, { useState, useRef } from 'react';\r\nimport Form from './Form';\r\n\r\nfunction AuthorizeForm({onSubmit, title, submitButtonText, path,\r\n    loginText, loginLink, autoCompleteEmail, autoCompletePassword}){\r\n       \r\n       \r\n       \r\n        const [email, setEmail] = useState('');\r\n        const [password, setPassword] = useState('');\r\n        const [emailError, setEmailError] = useState('');\r\n        const [passwordError, setPasswordError] = useState('');\r\n        const [emailValid, setEmailValid] = useState(false);\r\n        const [passwordValid, setPasswordValid] = useState(false);\r\n\r\n        const emailRef = useRef();\r\n        const passwordRef = useRef();\r\n      \r\n        function handleChange(evt) {\r\n          const { value } = evt.target;\r\n          evt.target.name === 'email'\r\n            ? setEmail(value)\r\n            : setPassword(value);\r\n          validate();\r\n        }\r\n      \r\n        function validate() {\r\n          setEmailError(emailRef.current.validationMessage);\r\n          setPasswordError(passwordRef.current.validationMessage);\r\n          !emailRef.current.validity.valid ? setEmailValid(false) : setEmailValid(true);\r\n          !passwordRef.current.validity.valid ? setPasswordValid(false) : setPasswordValid(true);\r\n        }\r\n\r\n        function handleSubmit(evt) {\r\n            evt.preventDefault();\r\n            if (!email && !password) return;\r\n            onSubmit(password, email);\r\n            setEmail('');\r\n            setPassword('');\r\n        }\r\n\r\n    \r\n    \r\n        return(\r\n        <section className=\"authorize\">\r\n            <Form\r\n                id='authForm'\r\n                formName='signin'\r\n                title={title}\r\n                submitButtonText={submitButtonText}\r\n                isPopup={false}\r\n                path={path}\r\n                loginText={loginText}\r\n                loginLink={loginLink}\r\n                onSubmit={handleSubmit}\r\n            >\r\n            <label htmlFor=\"email\" className=\"authorize__form-label\">\r\n                <input \r\n                    ref={emailRef}\r\n                    id=\"email\" \r\n                    type=\"email\" \r\n                    placeholder=\"Email\" \r\n                    className=\"authorize__form-input\"\r\n                    name='email'\r\n                    value={email || ''}\r\n                    minLength='6'\r\n                    maxLength='40'\r\n                    autoComplete={autoCompleteEmail}\r\n                    required\r\n                    onChange={handleChange}\r\n                />\r\n\r\n            <span className={`popup__input-error ${!emailValid && 'authorize__form-error_visible'}`} id='email-error'>\r\n                {emailError}\r\n            </span>\r\n\r\n            </label>\r\n\r\n            <label htmlFor=\"password\" className=\"authorize__form-label\">\r\n                <input \r\n                    ref={passwordRef}\r\n                    id=\"password\" \r\n                    type=\"password\" \r\n                    placeholder=\"Пароль\" \r\n                    className=\"authorize__form-input\"\r\n                    name='password'\r\n                    value={password || ''}\r\n                    minLength='8'\r\n                    maxLength='30'\r\n                    autoComplete={autoCompletePassword}\r\n                    required\r\n                    onChange={handleChange}\r\n                />\r\n                <span className={`popup__input-error ${!passwordValid && 'authorize__form-error_visible'}`}\r\n                        id='password-error'>\r\n                    {passwordError}\r\n                </span>\r\n            </label>\r\n            \r\n            </Form>\r\n\r\n        </section>\r\n    )\r\n}\r\nexport default AuthorizeForm;","import React from 'react';\r\nimport AuthorizeForm from './AuthorizeForm';\r\n\r\nfunction Login({ onLogin }){\r\n    \r\n    function submitForm(password, email) {\r\n        onLogin(password, email);\r\n    }\r\n\r\n    return(\r\n        <AuthorizeForm\r\n            title='Вход'\r\n            submitButtonText='Войти'\r\n            path='/sign-up'\r\n            onSubmit={submitForm}\r\n            autoCompleteEmail='email'\r\n            autoCompletePassword='current-password'\r\n        />\r\n    )\r\n}\r\n\r\nexport default Login;","import React from 'react';\r\nimport AuthorizeForm from './AuthorizeForm';\r\n\r\nfunction Register({ onRegister }){\r\n    function submitForm(password, email) {\r\n        onRegister(password, email);\r\n      }\r\n    \r\n\r\n    return(\r\n        <AuthorizeForm\r\n            title='Регистрация'\r\n            submitButtonText='Зарегистрироваться'\r\n            path='/sign-in'\r\n            loginText='Уже зарегистрированы?'\r\n            loginLink='Войти'\r\n            onSubmit={submitForm}\r\n        />\r\n    )\r\n}\r\n\r\nexport default Register;","export default __webpack_public_path__ + \"static/media/resolve.1b6082f8.svg\";","export default __webpack_public_path__ + \"static/media/reject.df8eddf6.svg\";","export default __webpack_public_path__ + \"static/media/loading.65f78576.svg\";","\r\nimport React, { useState }  from 'react';\r\nimport {\r\n  Route, Switch, useLocation, Redirect, useHistory,\r\n} from 'react-router-dom';\r\n\r\nimport '../index.css';\r\nimport { api } from '../utils/Api.js';\r\nimport Header from '../components/Header.js';\r\nimport Main from '../components/Main.js';\r\nimport Footer from '../components/Footer.js';\r\nimport ImagePopup from '../components/ImagePopup.js';\r\nimport EditAvatarPopup from '../components/EditAvatarPopup.js';\r\nimport EditProfilePopup from '../components/EditProfilePopup.js';\r\nimport AddPlacePopup from '../components/AddPlacePopup.js';\r\nimport ConfirmPopup from './ConfirmPopup.js';\r\nimport ProtectedRoute from './ProtectedRoute';\r\nimport InfoTooltip from './InfoTooltip';\r\nimport * as auth from '../utils/auth';\r\nimport { CurrentUserContext }  from '../contexts/CurrentUserContext.js'\r\nimport Login from './Login';\r\nimport Register from './Register';\r\nimport resolvePath from '../images/resolve.svg';\r\nimport rejectPath from '../images/reject.svg';\r\nimport loading from '../images/loading.svg';\r\n\r\n\r\nfunction App() {\r\n\r\n  const [isEditProfilePopupOpen, setEditProfilePopupOpen] = useState(false);\r\n  const [isAddPlacePopupOpen, setAddPlacePopupOpen] = useState(false);\r\n  const [isEditAvatarPopupOpen, setEditAvatarPopupOpen] = useState(false);\r\n  const [isConfirmPopupOpen, setConfirmPopupOpen] = useState(false);\r\n  const [cards, setCards] = useState([]);\r\n  const [selectedCard, setSelectedCard] = useState({\r\n    isImageOpen: false,\r\n    link: '',\r\n    name: '',\r\n  });\r\n\r\n  const [currentUser, setCurrentUser] = useState({})\r\n  const [cardToDelete, setCardToDelete] = useState({});\r\n  const [isLoading, setLoading] = useState(false);\r\n\r\n  // авторизация\r\n  const [loggedIn, setLoggedIn] = useState(false);\r\n  const [email, setEmail] = useState('');\r\n  const [isAuthInfoOpened, setAuthInfoOpened] = useState(false);\r\n  const [isInfoTooltipOpen, setInfoTooltipOpen] = useState(false);\r\n  const [message, setMessage] = useState({\r\n    iconPath: loading,\r\n    text: ''\r\n  });\r\n  const location = useLocation();\r\n  const history = useHistory();\r\n  \r\n  // Получить данные пользователя\r\n  // React.useEffect(() => {\r\n  //   api\r\n  //     .getUserInfo()\r\n  //     .then((res) => {\r\n  //       setCurrentUser(res);\r\n  //     })\r\n  //     .catch((err) => console.log(`Ошибка при загрузке информации о пользователе: ${err}`));\r\n  // }, []);\r\n\r\n  // Проверить токен\r\n  // React.useEffect(() => {\r\n  //   const jwt = localStorage.getItem('jwt');\r\n  //   if (jwt) {\r\n  //     auth.getContent(jwt)\r\n  //       .then((res) => {\r\n  //         setLoggedIn(true);\r\n  //         setEmail(res.data.email);\r\n  //         history.push('/');\r\n  //       })\r\n  //       .catch(err => console.log(err));\r\n  //   }\r\n  // }, [history]);\r\n\r\n  // // Регистрация\r\n  function handleRegister(password, email) {\r\n    auth\r\n    \r\n    .register(password, email)\r\n      .then(() => {\r\n        setMessage({ iconPath: resolvePath, text: 'Вы успешно зарегистрировались!' });\r\n        history.push('/sign-in');\r\n      })\r\n      .catch((err) => setMessage({ iconPath: rejectPath, text: err.message }));\r\n       setInfoTooltipOpen(true);\r\n  }\r\n\r\n  React.useEffect(() => {\r\n    auth.getUserInfo()\r\n      .then((user) => {\r\n        setLoggedIn(true);\r\n        setCurrentUser(user);\r\n        return;\r\n      })\r\n      .catch((err) => console.log(err));\r\n  }, [loggedIn]);\r\n\r\n  React.useEffect(() => {\r\n    if (loggedIn) {\r\n      auth.getInitialCards()\r\n        .then((initialCards) => setCards(initialCards.reverse()))\r\n        .catch((err) => console.log(err));\r\n      }\r\n      return;\r\n  }, [loggedIn]);\r\n\r\n\r\n  // // Авторизация\r\n  function handleLogin(password, email) {\r\n    return  auth\r\n     .authorize(password, email)\r\n    \r\n      .then((data) => {\r\n        auth\r\n         .getUserInfo(data)\r\n          .then((res) => {\r\n            setEmail(res.data.email);\r\n          })\r\n          .catch(err => console.log(err));\r\n        setLoggedIn(true);\r\n        setMessage({ iconPath: resolvePath, text: 'Вы успешно вошли в приложение!' });\r\n        history.push('/');\r\n      })\r\n      .catch((err) => setMessage({ iconPath: rejectPath, text: err.message }));\r\n      //  setInfoTooltipOpen(true);\r\n  }\r\n \r\n  function handleSignOut() {\r\n    auth.signout()\r\n      .then(() => {\r\n        setLoggedIn(false);\r\n        setCurrentUser({});\r\n      })\r\n      .catch((err) => console.log(err));\r\n  }\r\n\r\n  //Открыть попап аватара\r\n  function handleEditAvatarClick() {\r\n    setEditAvatarPopupOpen(true);\r\n  }\r\n  //Открыть попап профииля\r\n  function handleEditProfileClick() {\r\n    setEditProfilePopupOpen(true);\r\n  }\r\n  //Открыть попап карточки\r\n  function handleAddPlaceClick() {\r\n    setAddPlacePopupOpen(true);\r\n  }\r\n  // открыть фулсайз фото\r\n  function handleCardClick(card) {\r\n    const { link, name } = card;\r\n    setSelectedCard({ isImageOpen: true, link: link, name: name });\r\n  }\r\n  function handleCardLike(card) {\r\n    // Снова проверяем, есть ли уже лайк на этой карточке\r\n    const isLiked = card.likes.some(i => i._id === currentUser._id);\r\n    // Отправляем запрос в API и получаем обновлённые данные карточки\r\n    auth\r\n      .changeLikeCardStatus(card._id, !isLiked)\r\n      .then((newCard) => {\r\n        // Формируем новый массив на основе имеющегося, подставляя в него новую карточку\r\n      const newCards = cards.map((c) => c._id === card._id ? newCard : c);\r\n      // Обновляем стейт\r\n      setCards(newCards);\r\n    })\r\n    .catch((err) =>\r\n        console.log(`Ошибка при постановке лайка: ${err}`)\r\n    );\r\n  } \r\n   //Удалить карточку после подтверждения\r\n   function handleConfirm() {\r\n    auth\r\n      .deleteCard(cardToDelete._id)\r\n      .then(() =>{\r\n        setCards(cards.filter((item) => item !== cardToDelete))\r\n        closeAllPopups();\r\n      })\r\n      .catch((err) => console.log(`Ошибка при удалении карточки: ${err}`));\r\n    \r\n  }\r\n  //Кликнуть на удаление карточки\r\n  function handleCardDelete(card) {\r\n    setConfirmPopupOpen(true);\r\n    setCardToDelete(card);\r\n  }\r\n  //Закрыть все попапы\r\n  function closeAllPopups() {\r\n    setEditProfilePopupOpen(false);\r\n    setEditAvatarPopupOpen(false);\r\n    setAddPlacePopupOpen(false);\r\n    setSelectedCard({});\r\n    setConfirmPopupOpen(false);\r\n    setInfoTooltipOpen(false)\r\n  }\r\n  //Обновить аватар\r\n  function handleUpdateAvatar(newAvatar) {\r\n      setLoading(true);\r\n      auth\r\n        .setUserAvatar(newAvatar)\r\n        .then((res) => {\r\n          setCurrentUser(res);\r\n          closeAllPopups();\r\n        })\r\n        .catch((err) => console.log(`Ошибка при обновлении аватара: ${err}`))\r\n        .finally(() => setLoading(false));\r\n        \r\n  }\r\n  //Обновить данные пользователя\r\n  function handleUpdateUser(userData) {\r\n      setLoading(true);\r\n      auth\r\n        .updateUserInfo(userData)\r\n        .then((newUser) => {\r\n          setCurrentUser(newUser);\r\n          closeAllPopups();\r\n        })\r\n        .catch((err) => `Ошибка при обновлении информации о пользователе: ${err}`)\r\n        .finally(() => setLoading(false));\r\n      \r\n  }\r\n  //Получить данные карточек с фото\r\n  React.useEffect(() => {\r\n    auth\r\n        .getInitialCards()\r\n        .then((cardData) => {\r\n          setCards(cardData);\r\n        })\r\n        .catch((err) => console.log(`Ошибка при загрузке карточек: ${err}`));\r\n  }, []);\r\n  \r\n  function handleAddPlace(card) {\r\n      setLoading(true);\r\n      auth\r\n        .postNewCard(card)\r\n        .then((newCard) => {\r\n          setCards([newCard, ...cards]);\r\n          closeAllPopups();\r\n        })\r\n        .catch((err) =>\r\n          console.log(`Ошибка при добавлении новой карточки: ${err}`)\r\n        )\r\n        .finally(() => setLoading(false));\r\n      \r\n  }\r\n    \r\n  return (\r\n    <CurrentUserContext.Provider value={currentUser}>\r\n        <div className=\"root\">\r\n          <div className=\"page\">\r\n          {(loggedIn && isAuthInfoOpened)}\r\n\r\n            <Header loggedIn={loggedIn}\r\n                    locaction={location}\r\n                    email={email}\r\n                    signOut={handleSignOut}\r\n                    isAuthInfoOpened={isAuthInfoOpened}\r\n            />\r\n            <Switch>\r\n      \r\n            <ProtectedRoute exact path=\"/\" loggedIn={loggedIn} component={Main}\r\n                    cards={cards}\r\n                    onCardClick={handleCardClick}\r\n                    onCardLike={handleCardLike}\r\n                    onCardDelete={handleCardDelete}\r\n                    onEditProfile={handleEditProfileClick}\r\n                    onAddPlace={handleAddPlaceClick}\r\n                    onEditAvatar={handleEditAvatarClick}\r\n            />\r\n          <Route path='/sign-in'>\r\n            <Login onLogin={handleLogin} />\r\n          </Route>\r\n         \r\n          <Route path='/sign-up'>\r\n            <Register onRegister={handleRegister} />\r\n          </Route>\r\n          <Route>\r\n            {loggedIn ? <Redirect to=\"/\" /> : <Redirect to=\"/sign-in\" />}\r\n          </Route>\r\n        </Switch>\r\n\r\n        <Footer />\r\n\r\n        <InfoTooltip\r\n          isOpen={isInfoTooltipOpen}\r\n          onClose={closeAllPopups}\r\n          loggedIn={loggedIn}\r\n          message={message}\r\n        />\r\n\r\n            <EditProfilePopup\r\n              isOpen={isEditProfilePopupOpen}\r\n              onClose={closeAllPopups}\r\n              onUpdateUser={handleUpdateUser}\r\n              isLoading={isLoading}\r\n            />\r\n            <EditAvatarPopup\r\n              onUpdateAvatar={handleUpdateAvatar}\r\n              isOpen={isEditAvatarPopupOpen}\r\n              onClose={closeAllPopups}\r\n              isLoading={isLoading}\r\n            />\r\n            <AddPlacePopup\r\n              isOpen={isAddPlacePopupOpen}\r\n              onClose={closeAllPopups}\r\n              onAddPlace={handleAddPlace}\r\n            />\r\n            <ConfirmPopup\r\n              isOpen={isConfirmPopupOpen}\r\n              onClose={closeAllPopups}\r\n              onConfirmDelete={handleConfirm}\r\n            />\r\n          \r\n            <ImagePopup \r\n            name={selectedCard.name}\r\n            link={selectedCard.link}\r\n            isOpen={selectedCard.isImageOpen}\r\n            onClose={closeAllPopups}\r\n            />\r\n            \r\n          </div>\r\n        </div>\r\n    </CurrentUserContext.Provider>\r\n  );\r\n}\r\n\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './components/App.js';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n     <BrowserRouter basename=\"/\">\r\n      <App />\r\n    </BrowserRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}