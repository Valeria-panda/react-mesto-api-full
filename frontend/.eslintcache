[{"C:\\Users\\solat\\dev\\react-mesto-api-full\\frontend\\src\\index.js":"1","C:\\Users\\solat\\dev\\react-mesto-api-full\\frontend\\src\\components\\App.js":"2","C:\\Users\\solat\\dev\\react-mesto-api-full\\frontend\\src\\reportWebVitals.js":"3","C:\\Users\\solat\\dev\\react-mesto-api-full\\frontend\\src\\components\\Header.js":"4","C:\\Users\\solat\\dev\\react-mesto-api-full\\frontend\\src\\components\\EditAvatarPopup.js":"5","C:\\Users\\solat\\dev\\react-mesto-api-full\\frontend\\src\\contexts\\CurrentUserContext.js":"6","C:\\Users\\solat\\dev\\react-mesto-api-full\\frontend\\src\\components\\Footer.js":"7","C:\\Users\\solat\\dev\\react-mesto-api-full\\frontend\\src\\components\\ImagePopup.js":"8","C:\\Users\\solat\\dev\\react-mesto-api-full\\frontend\\src\\components\\AddPlacePopup.js":"9","C:\\Users\\solat\\dev\\react-mesto-api-full\\frontend\\src\\components\\EditProfilePopup.js":"10","C:\\Users\\solat\\dev\\react-mesto-api-full\\frontend\\src\\components\\ConfirmPopup.js":"11","C:\\Users\\solat\\dev\\react-mesto-api-full\\frontend\\src\\components\\Main.js":"12","C:\\Users\\solat\\dev\\react-mesto-api-full\\frontend\\src\\utils\\Api.js":"13","C:\\Users\\solat\\dev\\react-mesto-api-full\\frontend\\src\\utils\\auth.js":"14","C:\\Users\\solat\\dev\\react-mesto-api-full\\frontend\\src\\components\\ProtectedRoute.js":"15","C:\\Users\\solat\\dev\\react-mesto-api-full\\frontend\\src\\components\\InfoTooltip.js":"16","C:\\Users\\solat\\dev\\react-mesto-api-full\\frontend\\src\\components\\Login.js":"17","C:\\Users\\solat\\dev\\react-mesto-api-full\\frontend\\src\\components\\Register.js":"18","C:\\Users\\solat\\dev\\react-mesto-api-full\\frontend\\src\\components\\AuthInfo.js":"19","C:\\Users\\solat\\dev\\react-mesto-api-full\\frontend\\src\\components\\Card.js":"20","C:\\Users\\solat\\dev\\react-mesto-api-full\\frontend\\src\\components\\PopupWithForm.js":"21","C:\\Users\\solat\\dev\\react-mesto-api-full\\frontend\\src\\utils\\constant.js":"22","C:\\Users\\solat\\dev\\react-mesto-api-full\\frontend\\src\\errors\\badRequestError.js":"23","C:\\Users\\solat\\dev\\react-mesto-api-full\\frontend\\src\\errors\\unauthorizedError.js":"24","C:\\Users\\solat\\dev\\react-mesto-api-full\\frontend\\src\\components\\AuthorizeForm.js":"25","C:\\Users\\solat\\dev\\react-mesto-api-full\\frontend\\src\\components\\Form.js":"26"},{"size":639,"mtime":1609752583081,"results":"27","hashOfConfig":"28"},{"size":10436,"mtime":1612006796596,"results":"29","hashOfConfig":"28"},{"size":362,"mtime":499162500000,"results":"30","hashOfConfig":"28"},{"size":805,"mtime":1611856123931,"results":"31","hashOfConfig":"28"},{"size":1086,"mtime":1610187088263,"results":"32","hashOfConfig":"28"},{"size":86,"mtime":1609338750925,"results":"33","hashOfConfig":"28"},{"size":210,"mtime":1611986859002,"results":"34","hashOfConfig":"28"},{"size":555,"mtime":1611986884502,"results":"35","hashOfConfig":"28"},{"size":2109,"mtime":1611986810037,"results":"36","hashOfConfig":"28"},{"size":2308,"mtime":1611986855250,"results":"37","hashOfConfig":"28"},{"size":565,"mtime":1611986845230,"results":"38","hashOfConfig":"28"},{"size":1652,"mtime":1611986902534,"results":"39","hashOfConfig":"28"},{"size":2462,"mtime":1611986752707,"results":"40","hashOfConfig":"28"},{"size":1850,"mtime":1611947360079,"results":"41","hashOfConfig":"28"},{"size":351,"mtime":1611986912016,"results":"42","hashOfConfig":"28"},{"size":560,"mtime":1611986889643,"results":"43","hashOfConfig":"28"},{"size":618,"mtime":1613814688586,"results":"44","hashOfConfig":"28"},{"size":550,"mtime":1611986917158,"results":"45","hashOfConfig":"28"},{"size":264,"mtime":1611951016208,"results":"46","hashOfConfig":"28"},{"size":1832,"mtime":1611945454640,"results":"47","hashOfConfig":"28"},{"size":820,"mtime":1611986907891,"results":"48","hashOfConfig":"28"},{"size":179,"mtime":1611986769224,"results":"49","hashOfConfig":"28"},{"size":195,"mtime":1611986778130,"results":"50","hashOfConfig":"28"},{"size":199,"mtime":1611986782859,"results":"51","hashOfConfig":"28"},{"size":3521,"mtime":1611986833969,"results":"52","hashOfConfig":"28"},{"size":1245,"mtime":1611986867198,"results":"53","hashOfConfig":"28"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},"rx8xol",{"filePath":"57","messages":"58","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"56"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\solat\\dev\\react-mesto-api-full\\frontend\\src\\index.js",[],["108","109"],"C:\\Users\\solat\\dev\\react-mesto-api-full\\frontend\\src\\components\\App.js",["110","111"],"import React, { useState }  from 'react';\nimport {\n  Route, Switch, useLocation, Redirect, useHistory,\n} from 'react-router-dom';\n\nimport '../index.css';\nimport { api } from '../utils/Api.js';\nimport Header from '../components/Header.js';\nimport Main from '../components/Main.js';\nimport Footer from '../components/Footer.js';\nimport ImagePopup from '../components/ImagePopup.js';\nimport EditAvatarPopup from '../components/EditAvatarPopup.js';\nimport EditProfilePopup from '../components/EditProfilePopup.js';\nimport AddPlacePopup from '../components/AddPlacePopup.js';\nimport ConfirmPopup from './ConfirmPopup.js';\nimport ProtectedRoute from './ProtectedRoute';\nimport InfoTooltip from './InfoTooltip';\nimport * as auth from '../utils/auth';\nimport { CurrentUserContext }  from '../contexts/CurrentUserContext.js'\nimport Login from './Login';\nimport Register from './Register';\nimport resolvePath from '../images/resolve.svg';\nimport rejectPath from '../images/reject.svg';\nimport loading from '../images/loading.svg';\n\n\nfunction App() {\n\n  const [isEditProfilePopupOpen, setEditProfilePopupOpen] = useState(false);\n  const [isAddPlacePopupOpen, setAddPlacePopupOpen] = useState(false);\n  const [isEditAvatarPopupOpen, setEditAvatarPopupOpen] = useState(false);\n  const [isConfirmPopupOpen, setConfirmPopupOpen] = useState(false);\n  const [cards, setCards] = useState([]);\n  const [selectedCard, setSelectedCard] = useState({\n    isImageOpen: false,\n    link: '',\n    name: '',\n  });\n\n  const [currentUser, setCurrentUser] = useState({})\n  const [cardToDelete, setCardToDelete] = useState({});\n  const [isLoading, setLoading] = useState(false);\n\n  // авторизация\n  const [loggedIn, setLoggedIn] = useState(false);\n  const [email, setEmail] = useState('');\n  const [isAuthInfoOpened, setAuthInfoOpened] = useState(false);\n  const [isInfoTooltipOpen, setInfoTooltipOpen] = useState(false);\n  const [message, setMessage] = useState({\n    iconPath: loading,\n    text: ''\n  });\n\n  const [token, setToken]= useState('');\n\n\n  const location = useLocation();\n  const history = useHistory();\n\n  const escape = require('escape-html');\n\n  // Проверить токен.\n  React.useEffect(() => {\n    const jwt = localStorage.getItem('jwt');\n    if (jwt) {\n      auth.getContent(jwt)\n        .then((res) => {\n          setToken(jwt);\n          setLoggedIn(true);\n          history.push('/');\n          setEmail(res.email)\n        })\n\n        .catch(err => console.log(err));\n    }\n  }, [history]);\n\n// поучить данные пользователя\nReact.useEffect(() => {\n  if (loggedIn) {\n    api\n      .getUserInfo(token)\n      .then((res) => {\n        console.log(token)\n        console.log(res)\n        setCurrentUser(res);\n        console.log(currentUser)\n      })\n      .catch((err) => console.log(`Ошибка при загрузке информации о пользователе: ${err}`));\n    }\n}, [loggedIn, token]);\n\n// Регистрация\nfunction handleRegister(password, email) {\n  auth.register(escape(password), email)\n    .then(() => {\n      setMessage({ iconPath: resolvePath, text: 'Вы успешно зарегистрировались!' });\n      history.push('/signin');\n    })\n    .catch((err) => setMessage({ iconPath: rejectPath, text: err.message }));\n  setInfoTooltipOpen(true);\n}\n\n// Авторизация\nfunction handleLogin(password, email) {\n  auth.authorize(escape(password), email)\n    .then((data) => {\n\n      localStorage.setItem('jwt', data.token);\n\n      setToken(data.token);\n      setCurrentUser({\n        name:data.name,\n        about:data.about,\n        avatar:data.avatar\n      });\n      setEmail(data.email);\n      setLoggedIn(true);\n      setMessage({ iconPath: resolvePath, text: 'Вы успешно вошли в приложение!' });\n\n\n      history.push('/');\n    })\n    .catch((err) => setMessage({ iconPath: rejectPath, text: err.message }))\n  setInfoTooltipOpen(true);\n}\n\n  // Выход\n  function handleSignOut() {\n    setLoggedIn(false);\n    localStorage.removeItem('jwt');\n    setEmail('');\n    history.push('/signin');\n  }\n\n  // Получить карточки\n  React.useEffect(() => {\n    if (loggedIn) {\n      api\n        .getInitialCards(token)\n        .then((cardData) => {\n          setCards(cardData);\n        })\n        .catch((err) => console.log(`Ошибка при загрузке карточек: ${err}`));\n      }\n  }, [loggedIn, token]);\n\n  //Обновить аватар\n  function handleUpdateAvatar(newAvatar) {\n      setLoading(true);\n      api\n        // .setUserAvatar(token, newAvatar)\n        .updateUserAvatar(token, newAvatar)\n        .then((res) => {\n          setCurrentUser(res);\n          closeAllPopups();\n        })\n        .catch((err) => console.log(`Ошибка при обновлении аватара: ${err}`))\n        .finally(() => setLoading(false));\n\n  }\n  //Обновить данные пользователя\n  function handleUpdateUser(userData) {\n      setLoading(true);\n      api\n        .updateUserInfo(token, userData)\n        .then((newUser) => {\n          setCurrentUser(newUser);\n          closeAllPopups();\n        })\n        .catch((err) => `Ошибка при обновлении информации о пользователе: ${err}`)\n        .finally(() => setLoading(false));\n\n  }\n  // добавить новую карточку\n  function handleAddPlace(card) {\n    setLoading(true)\n      api\n        .postNewCard(token, card)\n        .then((newCard) => {\n          setCards([newCard, ...cards]);\n          closeAllPopups();\n        })\n        .catch((err) =>\n          console.log(`Ошибка при добавлении новой карточки: ${err}`)\n        )\n        .finally(() => setLoading(false));\n\n  }\n\n  //Открыть попап аватара\n  function handleEditAvatarClick() {\n    setEditAvatarPopupOpen(true);\n  }\n  //Открыть попап профииля\n  function handleEditProfileClick() {\n    setEditProfilePopupOpen(true);\n  }\n  //Открыть попап карточки\n  function handleAddPlaceClick() {\n    setAddPlacePopupOpen(true);\n  }\n  // открыть фулсайз фото\n  function handleCardClick(card) {\n    const { link, name } = card;\n    setSelectedCard({ isImageOpen: true, link: link, name: name });\n  }\n  function handleCardLike(card) {\n    // Снова проверяем, есть ли уже лайк на этой карточке\n    const isLiked = card.likes.some(i => i === currentUser._id);\n    // Отправляем запрос в API и получаем обновлённые данные карточки\n    api\n      .changeLikeCardStatus(token, card._id, !isLiked)\n      .then((newCard) => {\n        // Формируем новый массив на основе имеющегося, подставляя в него новую карточку\n      const newCards = cards.map((c) => c._id === card._id ? newCard : c);\n      // Обновляем стейт\n      setCards(newCards);\n    })\n    .catch((err) =>\n        console.log(`Ошибка при постановке лайка: ${err}`)\n    );\n  }\n   //Удалить карточку после подтверждения\n   function handleConfirm() {\n    api\n      .deleteCard(token, cardToDelete._id)\n      console.log(token)\n      .then(() =>{\n        setCards(cards.filter((item) => item !== cardToDelete))\n        closeAllPopups();\n      })\n      .catch((err) => console.log(`Ошибка при удалении карточки: ${err}`));\n\n  }\n\n  //Кликнуть на удаление карточки\n  function handleCardDeleteClick(card) {\n    setConfirmPopupOpen(true);\n    setCardToDelete(card);\n  }\n\n  //Закрыть все попапы\n  function closeAllPopups() {\n    setEditProfilePopupOpen(false);\n    setEditAvatarPopupOpen(false);\n    setAddPlacePopupOpen(false);\n    setSelectedCard({});\n    setConfirmPopupOpen(false);\n    setInfoTooltipOpen(false)\n  }\n  return (\n    <CurrentUserContext.Provider value={currentUser}>\n        <div className=\"root\">\n          <div className=\"page\">\n          {(loggedIn && isAuthInfoOpened)}\n\n            <Header loggedIn={loggedIn}\n                    locaction={location}\n                    email={email}\n                    signOut={handleSignOut}\n                    isAuthInfoOpened={isAuthInfoOpened}\n            />\n            <Switch>\n\n            <ProtectedRoute exact path=\"/\" loggedIn={loggedIn} component={Main}\n                    cards={cards}\n                    onCardClick={handleCardClick}\n                    onCardLike={handleCardLike}\n                    onCardDelete={handleCardDeleteClick}\n                    onEditProfile={handleEditProfileClick}\n                    onAddPlace={handleAddPlaceClick}\n                    onEditAvatar={handleEditAvatarClick}\n            />\n          <Route path='/signin'>\n            <Login onLogin={handleLogin} />\n          </Route>\n\n          <Route path='/signup'>\n            <Register onRegister={handleRegister} />\n          </Route>\n          <Route>\n            {loggedIn ? <Redirect to=\"/\" /> : <Redirect to=\"/signin\" />}\n          </Route>\n        </Switch>\n\n        <Footer />\n\n        <InfoTooltip\n          isOpen={isInfoTooltipOpen}\n          onClose={closeAllPopups}\n          loggedIn={loggedIn}\n          message={message}\n        />\n\n            <EditProfilePopup\n              isOpen={isEditProfilePopupOpen}\n              onClose={closeAllPopups}\n              onUpdateUser={handleUpdateUser}\n              isLoading={isLoading}\n            />\n            <EditAvatarPopup\n              onUpdateAvatar={handleUpdateAvatar}\n              isOpen={isEditAvatarPopupOpen}\n              onClose={closeAllPopups}\n              isLoading={isLoading}\n            />\n            <AddPlacePopup\n              onAddPlace={handleAddPlace}\n              isOpen={isAddPlacePopupOpen}\n              onClose={closeAllPopups}\n\n            />\n            <ConfirmPopup\n              isOpen={isConfirmPopupOpen}\n              onClose={closeAllPopups}\n              onConfirmDelete={handleConfirm}\n            />\n\n            <ImagePopup\n            name={selectedCard.name}\n            link={selectedCard.link}\n            isOpen={selectedCard.isImageOpen}\n            onClose={closeAllPopups}\n            />\n\n          </div>\n        </div>\n    </CurrentUserContext.Provider>\n  );\n}\n\n\nexport default App;\n","C:\\Users\\solat\\dev\\react-mesto-api-full\\frontend\\src\\reportWebVitals.js",[],"C:\\Users\\solat\\dev\\react-mesto-api-full\\frontend\\src\\components\\Header.js",[],"C:\\Users\\solat\\dev\\react-mesto-api-full\\frontend\\src\\components\\EditAvatarPopup.js",[],"C:\\Users\\solat\\dev\\react-mesto-api-full\\frontend\\src\\contexts\\CurrentUserContext.js",[],"C:\\Users\\solat\\dev\\react-mesto-api-full\\frontend\\src\\components\\Footer.js",[],"C:\\Users\\solat\\dev\\react-mesto-api-full\\frontend\\src\\components\\ImagePopup.js",[],"C:\\Users\\solat\\dev\\react-mesto-api-full\\frontend\\src\\components\\AddPlacePopup.js",[],"C:\\Users\\solat\\dev\\react-mesto-api-full\\frontend\\src\\components\\EditProfilePopup.js",[],"C:\\Users\\solat\\dev\\react-mesto-api-full\\frontend\\src\\components\\ConfirmPopup.js",[],"C:\\Users\\solat\\dev\\react-mesto-api-full\\frontend\\src\\components\\Main.js",[],"C:\\Users\\solat\\dev\\react-mesto-api-full\\frontend\\src\\utils\\Api.js",[],"C:\\Users\\solat\\dev\\react-mesto-api-full\\frontend\\src\\utils\\auth.js",[],"C:\\Users\\solat\\dev\\react-mesto-api-full\\frontend\\src\\components\\ProtectedRoute.js",[],"C:\\Users\\solat\\dev\\react-mesto-api-full\\frontend\\src\\components\\InfoTooltip.js",[],"C:\\Users\\solat\\dev\\react-mesto-api-full\\frontend\\src\\components\\Login.js",[],"C:\\Users\\solat\\dev\\react-mesto-api-full\\frontend\\src\\components\\Register.js",[],"C:\\Users\\solat\\dev\\react-mesto-api-full\\frontend\\src\\components\\AuthInfo.js",[],"C:\\Users\\solat\\dev\\react-mesto-api-full\\frontend\\src\\components\\Card.js",[],"C:\\Users\\solat\\dev\\react-mesto-api-full\\frontend\\src\\components\\PopupWithForm.js",[],"C:\\Users\\solat\\dev\\react-mesto-api-full\\frontend\\src\\utils\\constant.js",[],"C:\\Users\\solat\\dev\\react-mesto-api-full\\frontend\\src\\errors\\badRequestError.js",[],"C:\\Users\\solat\\dev\\react-mesto-api-full\\frontend\\src\\errors\\unauthorizedError.js",[],"C:\\Users\\solat\\dev\\react-mesto-api-full\\frontend\\src\\components\\AuthorizeForm.js",[],"C:\\Users\\solat\\dev\\react-mesto-api-full\\frontend\\src\\components\\Form.js",[],{"ruleId":"112","replacedBy":"113"},{"ruleId":"114","replacedBy":"115"},{"ruleId":"116","severity":1,"message":"117","line":47,"column":28,"nodeType":"118","messageId":"119","endLine":47,"endColumn":45},{"ruleId":"120","severity":1,"message":"121","line":91,"column":4,"nodeType":"122","endLine":91,"endColumn":21,"suggestions":"123"},"no-native-reassign",["124"],"no-negated-in-lhs",["125"],"no-unused-vars","'setAuthInfoOpened' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook React.useEffect has a missing dependency: 'currentUser'. Either include it or remove the dependency array.","ArrayExpression",["126"],"no-global-assign","no-unsafe-negation",{"desc":"127","fix":"128"},"Update the dependencies array to be: [currentUser, loggedIn, token]",{"range":"129","text":"130"},[2833,2850],"[currentUser, loggedIn, token]"]